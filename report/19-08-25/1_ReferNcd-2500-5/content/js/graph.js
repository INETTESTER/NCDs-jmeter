/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1174.0, "minX": 0.0, "maxY": 13511.0, "series": [{"data": [[0.0, 1174.0], [0.1, 1179.0], [0.2, 1203.0], [0.3, 1233.0], [0.4, 1302.0], [0.5, 1368.0], [0.6, 1383.0], [0.7, 1403.0], [0.8, 1415.0], [0.9, 1432.0], [1.0, 1442.0], [1.1, 1451.0], [1.2, 1485.0], [1.3, 1502.0], [1.4, 1515.0], [1.5, 1538.0], [1.6, 1546.0], [1.7, 1560.0], [1.8, 1575.0], [1.9, 1578.0], [2.0, 1586.0], [2.1, 1595.0], [2.2, 1626.0], [2.3, 1630.0], [2.4, 1641.0], [2.5, 1648.0], [2.6, 1678.0], [2.7, 1684.0], [2.8, 1699.0], [2.9, 1701.0], [3.0, 1714.0], [3.1, 1744.0], [3.2, 1774.0], [3.3, 1800.0], [3.4, 1806.0], [3.5, 1870.0], [3.6, 1879.0], [3.7, 1888.0], [3.8, 1891.0], [3.9, 1898.0], [4.0, 1910.0], [4.1, 1936.0], [4.2, 1939.0], [4.3, 1977.0], [4.4, 1990.0], [4.5, 1997.0], [4.6, 2011.0], [4.7, 2024.0], [4.8, 2030.0], [4.9, 2039.0], [5.0, 2052.0], [5.1, 2057.0], [5.2, 2062.0], [5.3, 2064.0], [5.4, 2067.0], [5.5, 2082.0], [5.6, 2086.0], [5.7, 2093.0], [5.8, 2099.0], [5.9, 2102.0], [6.0, 2107.0], [6.1, 2119.0], [6.2, 2122.0], [6.3, 2136.0], [6.4, 2142.0], [6.5, 2157.0], [6.6, 2171.0], [6.7, 2178.0], [6.8, 2185.0], [6.9, 2220.0], [7.0, 2248.0], [7.1, 2259.0], [7.2, 2267.0], [7.3, 2274.0], [7.4, 2280.0], [7.5, 2283.0], [7.6, 2287.0], [7.7, 2307.0], [7.8, 2309.0], [7.9, 2318.0], [8.0, 2322.0], [8.1, 2324.0], [8.2, 2325.0], [8.3, 2328.0], [8.4, 2344.0], [8.5, 2351.0], [8.6, 2359.0], [8.7, 2363.0], [8.8, 2365.0], [8.9, 2368.0], [9.0, 2372.0], [9.1, 2375.0], [9.2, 2384.0], [9.3, 2399.0], [9.4, 2403.0], [9.5, 2408.0], [9.6, 2412.0], [9.7, 2424.0], [9.8, 2432.0], [9.9, 2445.0], [10.0, 2466.0], [10.1, 2480.0], [10.2, 2491.0], [10.3, 2497.0], [10.4, 2503.0], [10.5, 2515.0], [10.6, 2527.0], [10.7, 2538.0], [10.8, 2553.0], [10.9, 2574.0], [11.0, 2594.0], [11.1, 2595.0], [11.2, 2636.0], [11.3, 2640.0], [11.4, 2655.0], [11.5, 2656.0], [11.6, 2668.0], [11.7, 2674.0], [11.8, 2694.0], [11.9, 2704.0], [12.0, 2706.0], [12.1, 2709.0], [12.2, 2715.0], [12.3, 2718.0], [12.4, 2722.0], [12.5, 2727.0], [12.6, 2737.0], [12.7, 2741.0], [12.8, 2743.0], [12.9, 2747.0], [13.0, 2754.0], [13.1, 2755.0], [13.2, 2766.0], [13.3, 2767.0], [13.4, 2772.0], [13.5, 2779.0], [13.6, 2783.0], [13.7, 2786.0], [13.8, 2791.0], [13.9, 2801.0], [14.0, 2810.0], [14.1, 2812.0], [14.2, 2817.0], [14.3, 2818.0], [14.4, 2827.0], [14.5, 2839.0], [14.6, 2856.0], [14.7, 2860.0], [14.8, 2900.0], [14.9, 2910.0], [15.0, 2934.0], [15.1, 2958.0], [15.2, 2963.0], [15.3, 2965.0], [15.4, 2974.0], [15.5, 2977.0], [15.6, 2987.0], [15.7, 2989.0], [15.8, 2996.0], [15.9, 3007.0], [16.0, 3029.0], [16.1, 3033.0], [16.2, 3035.0], [16.3, 3053.0], [16.4, 3061.0], [16.5, 3093.0], [16.6, 3113.0], [16.7, 3124.0], [16.8, 3170.0], [16.9, 3190.0], [17.0, 3221.0], [17.1, 3228.0], [17.2, 3235.0], [17.3, 3251.0], [17.4, 3265.0], [17.5, 3277.0], [17.6, 3284.0], [17.7, 3287.0], [17.8, 3294.0], [17.9, 3298.0], [18.0, 3303.0], [18.1, 3305.0], [18.2, 3307.0], [18.3, 3319.0], [18.4, 3322.0], [18.5, 3339.0], [18.6, 3352.0], [18.7, 3357.0], [18.8, 3360.0], [18.9, 3368.0], [19.0, 3373.0], [19.1, 3379.0], [19.2, 3391.0], [19.3, 3396.0], [19.4, 3403.0], [19.5, 3410.0], [19.6, 3418.0], [19.7, 3424.0], [19.8, 3436.0], [19.9, 3447.0], [20.0, 3467.0], [20.1, 3470.0], [20.2, 3476.0], [20.3, 3478.0], [20.4, 3493.0], [20.5, 3497.0], [20.6, 3505.0], [20.7, 3515.0], [20.8, 3520.0], [20.9, 3526.0], [21.0, 3534.0], [21.1, 3547.0], [21.2, 3550.0], [21.3, 3556.0], [21.4, 3558.0], [21.5, 3567.0], [21.6, 3588.0], [21.7, 3594.0], [21.8, 3605.0], [21.9, 3607.0], [22.0, 3612.0], [22.1, 3631.0], [22.2, 3637.0], [22.3, 3639.0], [22.4, 3652.0], [22.5, 3656.0], [22.6, 3659.0], [22.7, 3666.0], [22.8, 3670.0], [22.9, 3673.0], [23.0, 3678.0], [23.1, 3689.0], [23.2, 3712.0], [23.3, 3715.0], [23.4, 3719.0], [23.5, 3727.0], [23.6, 3738.0], [23.7, 3738.0], [23.8, 3746.0], [23.9, 3748.0], [24.0, 3768.0], [24.1, 3777.0], [24.2, 3779.0], [24.3, 3786.0], [24.4, 3798.0], [24.5, 3799.0], [24.6, 3803.0], [24.7, 3818.0], [24.8, 3825.0], [24.9, 3826.0], [25.0, 3835.0], [25.1, 3836.0], [25.2, 3844.0], [25.3, 3846.0], [25.4, 3854.0], [25.5, 3855.0], [25.6, 3871.0], [25.7, 3876.0], [25.8, 3901.0], [25.9, 3912.0], [26.0, 3926.0], [26.1, 3930.0], [26.2, 3934.0], [26.3, 3937.0], [26.4, 3943.0], [26.5, 3948.0], [26.6, 3963.0], [26.7, 3971.0], [26.8, 3973.0], [26.9, 3992.0], [27.0, 3995.0], [27.1, 4008.0], [27.2, 4014.0], [27.3, 4025.0], [27.4, 4028.0], [27.5, 4037.0], [27.6, 4041.0], [27.7, 4045.0], [27.8, 4061.0], [27.9, 4068.0], [28.0, 4073.0], [28.1, 4079.0], [28.2, 4087.0], [28.3, 4089.0], [28.4, 4093.0], [28.5, 4101.0], [28.6, 4106.0], [28.7, 4109.0], [28.8, 4111.0], [28.9, 4111.0], [29.0, 4118.0], [29.1, 4131.0], [29.2, 4141.0], [29.3, 4145.0], [29.4, 4164.0], [29.5, 4172.0], [29.6, 4173.0], [29.7, 4180.0], [29.8, 4181.0], [29.9, 4185.0], [30.0, 4194.0], [30.1, 4212.0], [30.2, 4216.0], [30.3, 4217.0], [30.4, 4220.0], [30.5, 4224.0], [30.6, 4226.0], [30.7, 4230.0], [30.8, 4240.0], [30.9, 4262.0], [31.0, 4266.0], [31.1, 4294.0], [31.2, 4298.0], [31.3, 4307.0], [31.4, 4317.0], [31.5, 4323.0], [31.6, 4330.0], [31.7, 4332.0], [31.8, 4350.0], [31.9, 4362.0], [32.0, 4375.0], [32.1, 4377.0], [32.2, 4400.0], [32.3, 4404.0], [32.4, 4418.0], [32.5, 4423.0], [32.6, 4444.0], [32.7, 4453.0], [32.8, 4470.0], [32.9, 4477.0], [33.0, 4484.0], [33.1, 4487.0], [33.2, 4496.0], [33.3, 4502.0], [33.4, 4508.0], [33.5, 4523.0], [33.6, 4539.0], [33.7, 4541.0], [33.8, 4552.0], [33.9, 4566.0], [34.0, 4587.0], [34.1, 4599.0], [34.2, 4636.0], [34.3, 4643.0], [34.4, 4655.0], [34.5, 4659.0], [34.6, 4663.0], [34.7, 4668.0], [34.8, 4673.0], [34.9, 4677.0], [35.0, 4701.0], [35.1, 4707.0], [35.2, 4711.0], [35.3, 4723.0], [35.4, 4735.0], [35.5, 4740.0], [35.6, 4758.0], [35.7, 4777.0], [35.8, 4796.0], [35.9, 4814.0], [36.0, 4830.0], [36.1, 4842.0], [36.2, 4849.0], [36.3, 4851.0], [36.4, 4860.0], [36.5, 4873.0], [36.6, 4905.0], [36.7, 4920.0], [36.8, 4937.0], [36.9, 4946.0], [37.0, 4963.0], [37.1, 4971.0], [37.2, 4988.0], [37.3, 4999.0], [37.4, 5015.0], [37.5, 5025.0], [37.6, 5059.0], [37.7, 5080.0], [37.8, 5093.0], [37.9, 5119.0], [38.0, 5135.0], [38.1, 5152.0], [38.2, 5160.0], [38.3, 5201.0], [38.4, 5214.0], [38.5, 5244.0], [38.6, 5273.0], [38.7, 5297.0], [38.8, 5311.0], [38.9, 5321.0], [39.0, 5339.0], [39.1, 5344.0], [39.2, 5349.0], [39.3, 5360.0], [39.4, 5380.0], [39.5, 5390.0], [39.6, 5407.0], [39.7, 5434.0], [39.8, 5460.0], [39.9, 5484.0], [40.0, 5509.0], [40.1, 5525.0], [40.2, 5529.0], [40.3, 5535.0], [40.4, 5553.0], [40.5, 5563.0], [40.6, 5595.0], [40.7, 5633.0], [40.8, 5655.0], [40.9, 5672.0], [41.0, 5689.0], [41.1, 5716.0], [41.2, 5791.0], [41.3, 5856.0], [41.4, 5919.0], [41.5, 5925.0], [41.6, 5938.0], [41.7, 5964.0], [41.8, 5976.0], [41.9, 6040.0], [42.0, 6051.0], [42.1, 6072.0], [42.2, 6126.0], [42.3, 6133.0], [42.4, 6169.0], [42.5, 6179.0], [42.6, 6214.0], [42.7, 6233.0], [42.8, 6260.0], [42.9, 6335.0], [43.0, 6375.0], [43.1, 6398.0], [43.2, 6432.0], [43.3, 6444.0], [43.4, 6451.0], [43.5, 6453.0], [43.6, 6518.0], [43.7, 6538.0], [43.8, 6552.0], [43.9, 6578.0], [44.0, 6605.0], [44.1, 6606.0], [44.2, 6622.0], [44.3, 6630.0], [44.4, 6641.0], [44.5, 6659.0], [44.6, 6687.0], [44.7, 6697.0], [44.8, 6716.0], [44.9, 6733.0], [45.0, 6758.0], [45.1, 6767.0], [45.2, 6772.0], [45.3, 6780.0], [45.4, 6785.0], [45.5, 6810.0], [45.6, 6863.0], [45.7, 6865.0], [45.8, 6895.0], [45.9, 6896.0], [46.0, 6930.0], [46.1, 6934.0], [46.2, 6950.0], [46.3, 6974.0], [46.4, 7004.0], [46.5, 7037.0], [46.6, 7085.0], [46.7, 7101.0], [46.8, 7131.0], [46.9, 7151.0], [47.0, 7171.0], [47.1, 7190.0], [47.2, 7210.0], [47.3, 7232.0], [47.4, 7243.0], [47.5, 7253.0], [47.6, 7266.0], [47.7, 7273.0], [47.8, 7292.0], [47.9, 7317.0], [48.0, 7331.0], [48.1, 7332.0], [48.2, 7341.0], [48.3, 7365.0], [48.4, 7374.0], [48.5, 7391.0], [48.6, 7405.0], [48.7, 7418.0], [48.8, 7451.0], [48.9, 7467.0], [49.0, 7513.0], [49.1, 7534.0], [49.2, 7552.0], [49.3, 7567.0], [49.4, 7582.0], [49.5, 7590.0], [49.6, 7623.0], [49.7, 7630.0], [49.8, 7666.0], [49.9, 7669.0], [50.0, 7685.0], [50.1, 7702.0], [50.2, 7709.0], [50.3, 7712.0], [50.4, 7730.0], [50.5, 7732.0], [50.6, 7769.0], [50.7, 7781.0], [50.8, 7799.0], [50.9, 7815.0], [51.0, 7837.0], [51.1, 7859.0], [51.2, 7875.0], [51.3, 7893.0], [51.4, 7928.0], [51.5, 7945.0], [51.6, 7961.0], [51.7, 7969.0], [51.8, 7990.0], [51.9, 7997.0], [52.0, 8014.0], [52.1, 8021.0], [52.2, 8067.0], [52.3, 8091.0], [52.4, 8137.0], [52.5, 8148.0], [52.6, 8168.0], [52.7, 8182.0], [52.8, 8201.0], [52.9, 8223.0], [53.0, 8257.0], [53.1, 8302.0], [53.2, 8320.0], [53.3, 8366.0], [53.4, 8379.0], [53.5, 8389.0], [53.6, 8412.0], [53.7, 8419.0], [53.8, 8438.0], [53.9, 8451.0], [54.0, 8459.0], [54.1, 8476.0], [54.2, 8524.0], [54.3, 8535.0], [54.4, 8548.0], [54.5, 8596.0], [54.6, 8610.0], [54.7, 8627.0], [54.8, 8655.0], [54.9, 8694.0], [55.0, 8705.0], [55.1, 8728.0], [55.2, 8733.0], [55.3, 8748.0], [55.4, 8767.0], [55.5, 8789.0], [55.6, 8804.0], [55.7, 8835.0], [55.8, 8850.0], [55.9, 8861.0], [56.0, 8888.0], [56.1, 8909.0], [56.2, 8921.0], [56.3, 8933.0], [56.4, 8945.0], [56.5, 8950.0], [56.6, 8970.0], [56.7, 8982.0], [56.8, 9001.0], [56.9, 9017.0], [57.0, 9028.0], [57.1, 9032.0], [57.2, 9046.0], [57.3, 9049.0], [57.4, 9095.0], [57.5, 9106.0], [57.6, 9112.0], [57.7, 9120.0], [57.8, 9137.0], [57.9, 9143.0], [58.0, 9149.0], [58.1, 9157.0], [58.2, 9173.0], [58.3, 9174.0], [58.4, 9177.0], [58.5, 9180.0], [58.6, 9188.0], [58.7, 9205.0], [58.8, 9215.0], [58.9, 9218.0], [59.0, 9220.0], [59.1, 9222.0], [59.2, 9233.0], [59.3, 9234.0], [59.4, 9245.0], [59.5, 9255.0], [59.6, 9268.0], [59.7, 9275.0], [59.8, 9285.0], [59.9, 9291.0], [60.0, 9299.0], [60.1, 9303.0], [60.2, 9308.0], [60.3, 9314.0], [60.4, 9325.0], [60.5, 9327.0], [60.6, 9336.0], [60.7, 9343.0], [60.8, 9349.0], [60.9, 9352.0], [61.0, 9359.0], [61.1, 9363.0], [61.2, 9378.0], [61.3, 9383.0], [61.4, 9390.0], [61.5, 9404.0], [61.6, 9434.0], [61.7, 9436.0], [61.8, 9440.0], [61.9, 9444.0], [62.0, 9461.0], [62.1, 9468.0], [62.2, 9471.0], [62.3, 9478.0], [62.4, 9490.0], [62.5, 9507.0], [62.6, 9515.0], [62.7, 9524.0], [62.8, 9550.0], [62.9, 9556.0], [63.0, 9572.0], [63.1, 9573.0], [63.2, 9584.0], [63.3, 9588.0], [63.4, 9598.0], [63.5, 9602.0], [63.6, 9611.0], [63.7, 9620.0], [63.8, 9627.0], [63.9, 9629.0], [64.0, 9646.0], [64.1, 9648.0], [64.2, 9656.0], [64.3, 9659.0], [64.4, 9667.0], [64.5, 9677.0], [64.6, 9683.0], [64.7, 9696.0], [64.8, 9701.0], [64.9, 9703.0], [65.0, 9709.0], [65.1, 9721.0], [65.2, 9722.0], [65.3, 9725.0], [65.4, 9730.0], [65.5, 9736.0], [65.6, 9744.0], [65.7, 9757.0], [65.8, 9771.0], [65.9, 9775.0], [66.0, 9782.0], [66.1, 9786.0], [66.2, 9790.0], [66.3, 9792.0], [66.4, 9802.0], [66.5, 9811.0], [66.6, 9823.0], [66.7, 9830.0], [66.8, 9836.0], [66.9, 9842.0], [67.0, 9855.0], [67.1, 9863.0], [67.2, 9874.0], [67.3, 9881.0], [67.4, 9899.0], [67.5, 9901.0], [67.6, 9907.0], [67.7, 9920.0], [67.8, 9937.0], [67.9, 9937.0], [68.0, 9957.0], [68.1, 9971.0], [68.2, 9986.0], [68.3, 9989.0], [68.4, 10011.0], [68.5, 10014.0], [68.6, 10026.0], [68.7, 10029.0], [68.8, 10042.0], [68.9, 10069.0], [69.0, 10072.0], [69.1, 10079.0], [69.2, 10105.0], [69.3, 10106.0], [69.4, 10129.0], [69.5, 10140.0], [69.6, 10142.0], [69.7, 10153.0], [69.8, 10165.0], [69.9, 10185.0], [70.0, 10205.0], [70.1, 10230.0], [70.2, 10256.0], [70.3, 10266.0], [70.4, 10288.0], [70.5, 10295.0], [70.6, 10298.0], [70.7, 10303.0], [70.8, 10315.0], [70.9, 10326.0], [71.0, 10344.0], [71.1, 10360.0], [71.2, 10391.0], [71.3, 10406.0], [71.4, 10413.0], [71.5, 10419.0], [71.6, 10443.0], [71.7, 10446.0], [71.8, 10459.0], [71.9, 10462.0], [72.0, 10472.0], [72.1, 10476.0], [72.2, 10497.0], [72.3, 10509.0], [72.4, 10535.0], [72.5, 10543.0], [72.6, 10558.0], [72.7, 10576.0], [72.8, 10591.0], [72.9, 10603.0], [73.0, 10619.0], [73.1, 10620.0], [73.2, 10630.0], [73.3, 10634.0], [73.4, 10654.0], [73.5, 10656.0], [73.6, 10674.0], [73.7, 10690.0], [73.8, 10704.0], [73.9, 10709.0], [74.0, 10709.0], [74.1, 10716.0], [74.2, 10730.0], [74.3, 10735.0], [74.4, 10738.0], [74.5, 10753.0], [74.6, 10754.0], [74.7, 10763.0], [74.8, 10770.0], [74.9, 10780.0], [75.0, 10786.0], [75.1, 10812.0], [75.2, 10821.0], [75.3, 10826.0], [75.4, 10829.0], [75.5, 10846.0], [75.6, 10854.0], [75.7, 10877.0], [75.8, 10880.0], [75.9, 10891.0], [76.0, 10895.0], [76.1, 10904.0], [76.2, 10919.0], [76.3, 10942.0], [76.4, 10946.0], [76.5, 10971.0], [76.6, 10975.0], [76.7, 10989.0], [76.8, 10998.0], [76.9, 11001.0], [77.0, 11012.0], [77.1, 11016.0], [77.2, 11023.0], [77.3, 11033.0], [77.4, 11039.0], [77.5, 11050.0], [77.6, 11057.0], [77.7, 11071.0], [77.8, 11089.0], [77.9, 11105.0], [78.0, 11111.0], [78.1, 11121.0], [78.2, 11123.0], [78.3, 11139.0], [78.4, 11151.0], [78.5, 11162.0], [78.6, 11166.0], [78.7, 11172.0], [78.8, 11174.0], [78.9, 11175.0], [79.0, 11191.0], [79.1, 11200.0], [79.2, 11207.0], [79.3, 11219.0], [79.4, 11230.0], [79.5, 11244.0], [79.6, 11246.0], [79.7, 11259.0], [79.8, 11267.0], [79.9, 11272.0], [80.0, 11277.0], [80.1, 11291.0], [80.2, 11303.0], [80.3, 11316.0], [80.4, 11319.0], [80.5, 11338.0], [80.6, 11342.0], [80.7, 11365.0], [80.8, 11372.0], [80.9, 11380.0], [81.0, 11385.0], [81.1, 11396.0], [81.2, 11402.0], [81.3, 11414.0], [81.4, 11426.0], [81.5, 11436.0], [81.6, 11457.0], [81.7, 11462.0], [81.8, 11469.0], [81.9, 11475.0], [82.0, 11481.0], [82.1, 11490.0], [82.2, 11500.0], [82.3, 11517.0], [82.4, 11519.0], [82.5, 11522.0], [82.6, 11534.0], [82.7, 11544.0], [82.8, 11547.0], [82.9, 11552.0], [83.0, 11555.0], [83.1, 11581.0], [83.2, 11588.0], [83.3, 11598.0], [83.4, 11600.0], [83.5, 11608.0], [83.6, 11609.0], [83.7, 11615.0], [83.8, 11622.0], [83.9, 11626.0], [84.0, 11630.0], [84.1, 11637.0], [84.2, 11638.0], [84.3, 11649.0], [84.4, 11657.0], [84.5, 11664.0], [84.6, 11675.0], [84.7, 11686.0], [84.8, 11688.0], [84.9, 11700.0], [85.0, 11708.0], [85.1, 11716.0], [85.2, 11734.0], [85.3, 11738.0], [85.4, 11743.0], [85.5, 11756.0], [85.6, 11766.0], [85.7, 11777.0], [85.8, 11781.0], [85.9, 11791.0], [86.0, 11802.0], [86.1, 11804.0], [86.2, 11816.0], [86.3, 11823.0], [86.4, 11825.0], [86.5, 11830.0], [86.6, 11836.0], [86.7, 11844.0], [86.8, 11849.0], [86.9, 11854.0], [87.0, 11865.0], [87.1, 11874.0], [87.2, 11875.0], [87.3, 11880.0], [87.4, 11886.0], [87.5, 11891.0], [87.6, 11895.0], [87.7, 11906.0], [87.8, 11911.0], [87.9, 11915.0], [88.0, 11920.0], [88.1, 11925.0], [88.2, 11929.0], [88.3, 11935.0], [88.4, 11941.0], [88.5, 11945.0], [88.6, 11957.0], [88.7, 11965.0], [88.8, 11967.0], [88.9, 11982.0], [89.0, 11993.0], [89.1, 12001.0], [89.2, 12007.0], [89.3, 12017.0], [89.4, 12024.0], [89.5, 12038.0], [89.6, 12048.0], [89.7, 12059.0], [89.8, 12079.0], [89.9, 12092.0], [90.0, 12095.0], [90.1, 12106.0], [90.2, 12109.0], [90.3, 12125.0], [90.4, 12133.0], [90.5, 12139.0], [90.6, 12141.0], [90.7, 12144.0], [90.8, 12148.0], [90.9, 12150.0], [91.0, 12162.0], [91.1, 12166.0], [91.2, 12182.0], [91.3, 12201.0], [91.4, 12202.0], [91.5, 12212.0], [91.6, 12213.0], [91.7, 12220.0], [91.8, 12221.0], [91.9, 12233.0], [92.0, 12238.0], [92.1, 12241.0], [92.2, 12250.0], [92.3, 12253.0], [92.4, 12258.0], [92.5, 12267.0], [92.6, 12295.0], [92.7, 12301.0], [92.8, 12309.0], [92.9, 12312.0], [93.0, 12323.0], [93.1, 12326.0], [93.2, 12332.0], [93.3, 12337.0], [93.4, 12347.0], [93.5, 12366.0], [93.6, 12374.0], [93.7, 12386.0], [93.8, 12390.0], [93.9, 12398.0], [94.0, 12409.0], [94.1, 12415.0], [94.2, 12418.0], [94.3, 12425.0], [94.4, 12432.0], [94.5, 12445.0], [94.6, 12453.0], [94.7, 12459.0], [94.8, 12468.0], [94.9, 12474.0], [95.0, 12482.0], [95.1, 12496.0], [95.2, 12512.0], [95.3, 12519.0], [95.4, 12526.0], [95.5, 12559.0], [95.6, 12567.0], [95.7, 12577.0], [95.8, 12581.0], [95.9, 12594.0], [96.0, 12608.0], [96.1, 12618.0], [96.2, 12625.0], [96.3, 12637.0], [96.4, 12652.0], [96.5, 12660.0], [96.6, 12670.0], [96.7, 12687.0], [96.8, 12689.0], [96.9, 12699.0], [97.0, 12710.0], [97.1, 12739.0], [97.2, 12753.0], [97.3, 12759.0], [97.4, 12769.0], [97.5, 12779.0], [97.6, 12787.0], [97.7, 12801.0], [97.8, 12801.0], [97.9, 12814.0], [98.0, 12822.0], [98.1, 12837.0], [98.2, 12840.0], [98.3, 12851.0], [98.4, 12880.0], [98.5, 12911.0], [98.6, 12920.0], [98.7, 12962.0], [98.8, 12982.0], [98.9, 13005.0], [99.0, 13044.0], [99.1, 13074.0], [99.2, 13080.0], [99.3, 13100.0], [99.4, 13119.0], [99.5, 13149.0], [99.6, 13166.0], [99.7, 13198.0], [99.8, 13234.0], [99.9, 13477.0], [100.0, 13511.0]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1100.0, "maxY": 50.0, "series": [{"data": [[1100.0, 5.0], [1200.0, 5.0], [1300.0, 7.0], [1400.0, 15.0], [1500.0, 21.0], [1600.0, 18.0], [1700.0, 10.0], [1800.0, 17.0], [1900.0, 15.0], [2000.0, 33.0], [2100.0, 26.0], [2300.0, 42.0], [2200.0, 19.0], [2400.0, 26.0], [2500.0, 19.0], [2600.0, 19.0], [2700.0, 50.0], [2800.0, 23.0], [2900.0, 27.0], [3000.0, 17.0], [3100.0, 9.0], [3300.0, 36.0], [3200.0, 25.0], [3400.0, 30.0], [3500.0, 29.0], [3600.0, 36.0], [3700.0, 34.0], [3800.0, 32.0], [3900.0, 31.0], [4000.0, 36.0], [4200.0, 31.0], [4100.0, 39.0], [4300.0, 23.0], [4400.0, 27.0], [4600.0, 22.0], [4500.0, 21.0], [4700.0, 21.0], [4800.0, 19.0], [4900.0, 18.0], [5100.0, 11.0], [5000.0, 13.0], [5200.0, 13.0], [5300.0, 19.0], [5400.0, 9.0], [5500.0, 18.0], [5600.0, 11.0], [5800.0, 3.0], [5700.0, 4.0], [5900.0, 12.0], [6000.0, 8.0], [6100.0, 10.0], [6200.0, 8.0], [6300.0, 6.0], [6400.0, 11.0], [6500.0, 11.0], [6600.0, 18.0], [6800.0, 12.0], [6900.0, 12.0], [6700.0, 18.0], [7100.0, 12.0], [7000.0, 7.0], [7200.0, 17.0], [7300.0, 18.0], [7400.0, 11.0], [7500.0, 13.0], [7600.0, 14.0], [7700.0, 19.0], [7800.0, 12.0], [7900.0, 15.0], [8000.0, 10.0], [8100.0, 12.0], [8200.0, 7.0], [8300.0, 11.0], [8400.0, 16.0], [8500.0, 9.0], [8600.0, 11.0], [8700.0, 15.0], [8800.0, 13.0], [8900.0, 18.0], [9000.0, 17.0], [9100.0, 30.0], [9200.0, 34.0], [9600.0, 33.0], [9300.0, 36.0], [9500.0, 25.0], [9700.0, 41.0], [9400.0, 24.0], [9800.0, 27.0], [9900.0, 22.0], [10000.0, 21.0], [10200.0, 17.0], [10100.0, 20.0], [10300.0, 14.0], [10400.0, 25.0], [10500.0, 15.0], [10600.0, 23.0], [10700.0, 33.0], [10800.0, 23.0], [10900.0, 21.0], [11100.0, 30.0], [11000.0, 25.0], [11200.0, 28.0], [11300.0, 25.0], [11400.0, 25.0], [11500.0, 30.0], [11600.0, 38.0], [11700.0, 26.0], [11900.0, 37.0], [11800.0, 42.0], [12100.0, 32.0], [12000.0, 23.0], [12200.0, 35.0], [12300.0, 31.0], [12400.0, 30.0], [12500.0, 20.0], [12600.0, 25.0], [12700.0, 18.0], [12800.0, 21.0], [12900.0, 8.0], [13000.0, 12.0], [13100.0, 11.0], [13200.0, 2.0], [13300.0, 2.0], [13500.0, 1.0], [13400.0, 2.0]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2468.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2468.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1250.8107999999975, "minX": 1.75557732E12, "maxY": 1250.8107999999975, "series": [{"data": [[1.75557732E12, 1250.8107999999975]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75557732E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1184.0, "minX": 1.0, "maxY": 13511.0, "series": [{"data": [[2.0, 13312.0], [3.0, 13497.0], [4.0, 13187.0], [5.0, 13149.0], [6.0, 12881.0], [7.0, 13198.0], [8.0, 13119.0], [9.0, 13477.0], [10.0, 13097.0], [11.0, 13511.0], [12.0, 13074.0], [13.0, 13005.0], [14.0, 12753.0], [16.0, 12522.5], [17.0, 12337.0], [18.0, 12880.0], [19.0, 12801.0], [20.0, 13234.0], [21.0, 12251.0], [22.0, 12470.0], [23.0, 12837.0], [24.0, 12863.0], [25.0, 12828.0], [27.0, 12724.5], [28.0, 13044.0], [29.0, 12740.0], [30.0, 12814.0], [31.0, 12801.0], [33.0, 12775.0], [32.0, 12800.0], [35.0, 13149.0], [34.0, 12754.0], [37.0, 12896.0], [36.0, 12974.0], [38.0, 12777.0], [41.0, 12133.0], [40.0, 12717.0], [43.0, 12493.0], [42.0, 13183.0], [44.0, 13122.0], [47.0, 13080.0], [46.0, 12733.5], [48.0, 13166.0], [50.0, 12836.0], [53.0, 12636.0], [52.0, 12798.0], [55.0, 13039.0], [54.0, 12652.0], [56.0, 13077.0], [59.0, 12699.0], [58.0, 12690.0], [61.0, 12256.0], [60.0, 12238.0], [63.0, 12710.0], [62.0, 12759.0], [67.0, 12296.5], [65.0, 12840.0], [64.0, 13110.0], [71.0, 12660.0], [70.0, 12415.0], [69.0, 13082.0], [68.0, 12759.0], [75.0, 13063.0], [74.0, 12657.0], [73.0, 12560.0], [72.0, 12250.0], [79.0, 12962.0], [78.0, 12207.5], [76.0, 11949.0], [83.0, 13000.0], [82.0, 12818.5], [80.0, 12237.0], [87.0, 12132.0], [86.0, 12497.5], [85.0, 12618.0], [91.0, 12522.0], [90.0, 12676.0], [89.0, 12386.0], [88.0, 12614.0], [95.0, 12165.0], [94.0, 12594.0], [93.0, 12055.0], [92.0, 12982.0], [99.0, 12108.0], [98.0, 12663.0], [97.0, 12581.0], [96.0, 12608.0], [103.0, 12912.0], [102.0, 12518.0], [101.0, 12567.0], [100.0, 12689.0], [107.0, 12312.0], [106.0, 12468.0], [105.0, 12920.0], [104.0, 12005.0], [111.0, 12313.0], [109.0, 12342.5], [115.0, 12643.0], [113.0, 12515.0], [112.0, 12911.0], [119.0, 12412.0], [118.0, 12929.0], [117.0, 12935.0], [116.0, 12250.0], [123.0, 12095.0], [122.0, 12420.0], [121.0, 12482.0], [120.0, 12102.0], [127.0, 12488.0], [125.0, 11932.0], [135.0, 11940.0], [133.0, 12475.0], [132.0, 12557.5], [130.0, 12812.0], [129.0, 12847.0], [128.0, 12081.5], [143.0, 11967.0], [142.0, 12048.0], [141.0, 12822.0], [140.0, 12439.0], [139.0, 12459.0], [138.0, 12299.5], [136.0, 12329.0], [151.0, 12548.0], [149.0, 12201.0], [148.0, 12364.0], [147.0, 12425.0], [146.0, 11895.0], [145.0, 11895.0], [144.0, 12209.0], [159.0, 12787.0], [158.0, 12769.0], [157.0, 11827.0], [156.0, 12016.0], [155.0, 12017.0], [154.0, 12851.0], [153.0, 12432.0], [152.0, 12819.0], [167.0, 12079.0], [166.0, 12456.333333333334], [163.0, 12418.0], [162.0, 12387.0], [161.0, 12838.0], [160.0, 12783.0], [175.0, 12253.0], [173.0, 12273.0], [171.0, 11874.0], [170.0, 11738.0], [169.0, 12007.0], [168.0, 12137.0], [183.0, 12584.5], [181.0, 12453.0], [180.0, 12724.0], [179.0, 11849.0], [178.0, 12739.0], [177.0, 12103.0], [191.0, 12107.5], [189.0, 12100.0], [187.0, 11902.0], [186.0, 12449.0], [185.0, 11874.0], [184.0, 12726.0], [199.0, 12445.0], [197.0, 11766.0], [196.0, 12701.0], [195.0, 11906.0], [194.0, 12431.0], [193.0, 11940.0], [192.0, 12366.0], [207.0, 12456.0], [206.0, 11941.0], [205.0, 12588.0], [204.0, 12572.0], [203.0, 12608.0], [202.0, 12070.5], [200.0, 12173.0], [215.0, 11743.0], [214.0, 12687.0], [213.0, 12323.0], [212.0, 12309.0], [211.0, 11915.0], [210.0, 12514.0], [208.0, 12141.0], [223.0, 11686.0], [222.0, 12412.0], [220.0, 12061.5], [218.0, 12034.0], [217.0, 12620.0], [216.0, 11742.0], [231.0, 12689.0], [230.0, 12258.0], [229.0, 11612.0], [228.0, 11634.0], [227.0, 12625.5], [225.0, 12028.0], [224.0, 12212.0], [239.0, 11775.5], [237.0, 12670.0], [236.0, 11718.0], [234.0, 12182.0], [233.0, 12267.0], [232.0, 12346.0], [247.0, 12221.0], [246.0, 12233.0], [245.0, 12229.0], [244.0, 11833.0], [243.0, 11854.0], [242.0, 11995.0], [241.0, 12241.0], [240.0, 12628.0], [255.0, 11552.0], [254.0, 11955.333333333334], [252.0, 12079.0], [250.0, 12590.0], [249.0, 11985.5], [268.0, 12529.0], [270.0, 11957.0], [271.0, 11555.0], [269.0, 12122.0], [267.0, 12008.6], [266.0, 12106.0], [261.0, 11969.0], [260.0, 11677.0], [259.0, 12213.0], [258.0, 12296.0], [257.0, 12358.5], [286.0, 12116.0], [287.0, 12318.0], [284.0, 12138.0], [275.0, 12169.0], [274.0, 12239.0], [273.0, 11506.0], [272.0, 11637.0], [282.0, 12577.0], [281.0, 11923.0], [280.0, 11877.0], [279.0, 12162.0], [278.0, 12164.0], [277.0, 11622.0], [276.0, 11925.0], [301.0, 11913.0], [300.0, 11751.0], [299.0, 12274.666666666666], [296.0, 11911.666666666666], [293.0, 12240.333333333334], [290.0, 12473.0], [289.0, 11598.0], [288.0, 11596.0], [318.0, 11681.0], [319.0, 11836.0], [317.0, 11844.0], [316.0, 12001.0], [315.0, 11891.0], [314.0, 12409.0], [313.0, 11544.0], [312.0, 11537.0], [311.0, 11918.0], [305.0, 11816.0], [304.0, 11701.0], [307.0, 12512.0], [306.0, 11914.0], [309.0, 11675.0], [308.0, 11547.0], [334.0, 11712.0], [333.0, 11715.0], [323.0, 11758.5], [321.0, 11728.5], [331.0, 11802.0], [330.0, 12053.0], [329.0, 12048.0], [328.0, 11813.0], [327.0, 12419.0], [326.0, 11966.0], [325.0, 12332.0], [324.0, 11517.0], [350.0, 11993.0], [351.0, 11608.0], [349.0, 11608.0], [348.0, 11823.0], [347.0, 11519.0], [346.0, 11352.0], [345.0, 11552.5], [343.0, 12207.0], [337.0, 11635.0], [336.0, 11945.0], [339.0, 11935.0], [338.0, 12417.0], [342.0, 11738.0], [340.0, 11781.0], [354.0, 12412.0], [367.0, 11690.333333333334], [364.0, 11976.0], [363.0, 11703.0], [362.0, 11712.0], [361.0, 12364.5], [359.0, 11833.5], [357.0, 12007.0], [356.0, 11908.5], [353.0, 11756.0], [352.0, 12059.0], [381.0, 11522.0], [382.0, 12301.0], [380.0, 11945.0], [370.0, 11878.0], [369.0, 11462.0], [368.0, 12374.0], [379.0, 11456.0], [377.0, 11609.0], [376.0, 11656.0], [375.0, 11659.0], [374.0, 11397.0], [373.0, 11581.0], [372.0, 11540.5], [398.0, 11875.0], [399.0, 11875.0], [397.0, 11238.0], [396.0, 11675.0], [395.0, 11588.0], [394.0, 11365.0], [393.0, 12010.5], [391.0, 11664.0], [385.0, 11815.0], [387.0, 12297.0], [386.0, 11536.0], [390.0, 11634.5], [388.0, 11290.0], [412.0, 11333.0], [414.0, 11408.0], [415.0, 11337.0], [413.0, 11244.0], [411.0, 11797.0], [408.0, 11486.0], [407.0, 11891.0], [401.0, 11951.5], [403.0, 11801.0], [402.0, 11630.0], [406.0, 11342.0], [405.0, 11475.0], [404.0, 12220.0], [430.0, 11945.0], [431.0, 11534.0], [429.0, 11608.0], [428.0, 12021.0], [427.0, 11640.0], [425.0, 11392.0], [424.0, 11733.5], [422.0, 11766.0], [416.0, 11319.0], [419.0, 11169.0], [417.0, 12191.0], [421.0, 11621.0], [420.0, 11602.0], [445.0, 11567.0], [446.0, 11247.0], [444.0, 11546.0], [435.0, 11925.333333333334], [432.0, 11212.0], [443.0, 11517.0], [442.0, 11501.0], [440.0, 11265.0], [439.0, 11414.0], [438.0, 11772.5], [437.0, 11284.0], [460.0, 11686.0], [462.0, 11219.0], [463.0, 12092.0], [461.0, 11077.0], [459.0, 12023.0], [457.0, 11510.0], [455.0, 11296.0], [450.0, 11447.0], [448.0, 12004.0], [454.0, 11237.0], [453.0, 11510.0], [452.0, 11274.5], [478.0, 11380.666666666666], [475.0, 11174.0], [474.0, 11282.5], [472.0, 11734.0], [471.0, 11547.0], [464.0, 11201.0], [470.0, 11259.0], [469.0, 11044.0], [468.0, 11230.0], [467.0, 11827.0], [465.0, 11200.0], [494.0, 11277.0], [495.0, 11121.0], [493.0, 11649.0], [492.0, 11162.0], [491.0, 11347.0], [490.0, 11138.0], [489.0, 11489.0], [488.0, 11690.0], [487.0, 11781.0], [481.0, 11272.0], [480.0, 11112.0], [483.0, 11473.0], [482.0, 11777.0], [486.0, 11457.0], [485.0, 11466.0], [484.0, 11160.0], [509.0, 11830.0], [510.0, 11071.0], [508.0, 11626.0], [499.0, 11645.0], [498.0, 11402.0], [497.0, 11270.0], [496.0, 11175.0], [507.0, 11987.0], [506.0, 11208.0], [505.0, 11195.0], [504.0, 11396.0], [503.0, 11384.0], [502.0, 11111.0], [501.0, 11982.0], [500.0, 11312.0], [540.0, 11247.0], [542.0, 11227.0], [538.0, 11015.0], [536.0, 11113.0], [534.0, 11272.0], [532.0, 11909.0], [530.0, 11459.0], [528.0, 11012.0], [526.0, 11567.0], [514.0, 11160.0], [512.0, 11077.0], [518.0, 11586.0], [516.0, 11191.0], [524.0, 11934.0], [522.0, 11172.0], [520.0, 11170.0], [572.0, 11271.0], [574.0, 11001.0], [570.0, 11554.0], [568.0, 10714.0], [566.0, 11147.0], [564.0, 11599.0], [562.0, 10922.0], [560.0, 11162.0], [556.0, 11074.0], [550.0, 10877.0], [548.0, 10893.0], [546.0, 11151.0], [544.0, 11128.5], [552.0, 11139.0], [604.0, 10704.0], [606.0, 10944.0], [602.0, 10955.0], [600.0, 10989.0], [598.0, 10974.0], [596.0, 10760.5], [594.0, 10979.0], [592.0, 10917.0], [590.0, 10880.0], [578.0, 11061.0], [576.0, 10987.0], [582.0, 11021.0], [580.0, 11380.0], [588.0, 10730.0], [584.0, 10998.0], [634.0, 10459.0], [624.0, 10527.0], [636.0, 10880.0], [626.0, 10764.0], [632.0, 10605.0], [614.0, 10782.0], [612.0, 10836.0], [610.0, 10763.0], [608.0, 10975.0], [620.0, 10904.0], [618.0, 10942.0], [616.0, 10785.0], [630.0, 10659.0], [628.0, 10826.0], [664.0, 11023.0], [670.0, 10628.666666666666], [660.0, 10621.0], [658.0, 10484.0], [646.0, 10419.0], [644.0, 11057.0], [642.0, 10543.0], [640.0, 10841.0], [654.0, 10654.0], [652.0, 11267.0], [650.0, 10780.0], [662.0, 10500.0], [700.0, 10621.0], [702.0, 10288.0], [688.0, 10699.0], [690.0, 10472.0], [692.0, 10832.0], [696.0, 10654.0], [678.0, 10738.0], [676.0, 10738.0], [674.0, 10580.0], [672.0, 10446.0], [686.0, 10387.0], [684.0, 10687.0], [682.0, 10709.0], [694.0, 11100.0], [732.0, 10079.0], [720.0, 10880.0], [722.0, 10315.0], [724.0, 10180.0], [734.0, 10072.0], [730.0, 10406.0], [728.0, 10285.0], [706.0, 10258.0], [708.0, 10646.5], [710.0, 10345.0], [718.0, 10194.0], [716.0, 10846.0], [714.0, 10205.0], [712.0, 10129.0], [726.0, 10344.0], [764.0, 10020.0], [754.0, 10153.0], [756.0, 10106.0], [766.0, 10185.0], [762.0, 10851.0], [760.0, 9981.0], [738.0, 10826.0], [740.0, 10334.0], [742.0, 10042.0], [750.0, 10474.0], [748.0, 10011.0], [746.0, 10313.0], [744.0, 10117.0], [758.0, 9837.0], [796.0, 9835.5], [798.0, 9786.0], [784.0, 10020.5], [786.0, 9921.0], [794.0, 9952.0], [792.0, 10576.0], [774.0, 10141.0], [772.0, 10633.0], [770.0, 9777.0], [768.0, 9968.0], [782.0, 9903.0], [780.0, 9855.0], [778.0, 10165.0], [776.0, 9863.0], [790.0, 9986.0], [826.0, 9736.0], [830.0, 9797.0], [816.0, 10461.0], [818.0, 9683.0], [828.0, 9744.0], [804.0, 9786.0], [802.0, 9937.0], [800.0, 9790.0], [814.0, 9771.0], [812.0, 9735.0], [810.0, 9721.0], [808.0, 9573.0], [822.0, 10539.0], [856.0, 9595.0], [862.0, 9985.0], [848.0, 9702.0], [858.0, 9782.0], [832.0, 9730.0], [834.0, 9633.0], [838.0, 9667.0], [844.0, 10325.0], [842.0, 9758.0], [840.0, 9696.0], [854.0, 9546.0], [852.0, 9721.0], [868.0, 10027.5], [888.0, 9461.0], [894.0, 9434.0], [892.0, 9512.0], [864.0, 9606.5], [866.0, 9567.5], [878.0, 9351.0], [876.0, 9605.0], [874.0, 10424.0], [872.0, 9502.5], [886.0, 9791.0], [882.0, 9359.0], [900.0, 9284.0], [922.0, 9337.0], [916.0, 9301.5], [926.0, 9598.0], [914.0, 9476.0], [912.0, 9440.0], [898.0, 9255.0], [896.0, 9461.0], [910.0, 9486.0], [906.0, 9646.0], [904.0, 9648.0], [918.0, 9347.0], [956.0, 9336.0], [958.0, 9470.0], [946.0, 9756.5], [944.0, 9240.0], [948.0, 9360.0], [954.0, 9507.0], [952.0, 9525.0], [934.0, 9460.5], [932.0, 9349.0], [930.0, 9468.0], [928.0, 9337.0], [942.0, 9276.5], [940.0, 9738.0], [938.0, 9318.0], [936.0, 9264.0], [986.0, 9083.5], [990.0, 9665.5], [976.0, 9412.0], [978.0, 9138.0], [984.0, 9781.5], [966.0, 9476.0], [964.0, 9220.0], [960.0, 9301.0], [974.0, 9173.0], [972.0, 10046.0], [970.0, 9325.0], [968.0, 9293.666666666666], [982.0, 9017.0], [980.0, 9899.0], [1020.0, 9123.0], [1022.0, 9369.0], [1012.0, 9205.0], [1008.0, 9363.0], [1010.0, 9404.0], [1016.0, 9812.0], [998.0, 9002.0], [996.0, 9396.0], [992.0, 9268.0], [1006.0, 9101.5], [1004.0, 9119.0], [1002.0, 9275.0], [1014.0, 9303.0], [1076.0, 8909.0], [1060.0, 8945.0], [1084.0, 8937.0], [1056.0, 9589.0], [1080.0, 8915.0], [1072.0, 9023.666666666666], [1036.0, 9677.0], [1032.0, 9031.0], [1028.0, 9323.0], [1024.0, 9179.0], [1052.0, 9215.0], [1048.0, 9725.0], [1044.0, 9643.0], [1040.0, 9331.5], [1068.0, 9399.0], [1140.0, 8247.0], [1148.0, 8933.0], [1120.0, 9285.0], [1124.0, 8705.0], [1128.0, 8445.0], [1144.0, 8476.0], [1100.0, 9620.0], [1096.0, 9677.0], [1092.0, 8789.0], [1088.0, 8832.0], [1112.0, 8836.0], [1108.0, 9167.0], [1132.0, 9149.0], [1204.0, 7945.0], [1212.0, 8519.0], [1184.0, 8021.0], [1188.0, 7858.0], [1192.0, 8458.0], [1200.0, 8389.0], [1164.0, 8112.0], [1160.0, 8148.0], [1156.0, 8861.0], [1180.0, 8114.0], [1176.0, 8067.0], [1172.0, 8412.0], [1168.0, 8223.0], [1196.0, 7685.0], [1272.0, 7405.0], [1248.0, 7603.0], [1252.0, 7716.0], [1256.0, 7331.0], [1276.0, 7260.0], [1268.0, 7232.0], [1264.0, 7624.0], [1216.0, 7449.0], [1220.0, 7837.5], [1224.0, 7756.0], [1228.0, 7730.0], [1244.0, 7634.0], [1240.0, 8186.0], [1232.0, 7332.0], [1260.0, 7317.0], [1332.0, 6678.0], [1340.0, 7668.0], [1312.0, 7115.0], [1316.0, 7095.0], [1320.0, 6631.0], [1336.0, 6737.5], [1292.0, 7837.0], [1288.0, 7156.0], [1284.0, 7365.0], [1280.0, 7272.0], [1308.0, 7769.0], [1304.0, 7395.5], [1300.0, 7266.0], [1296.0, 7627.0], [1324.0, 7060.0], [1400.0, 6169.0], [1404.0, 6211.0], [1376.0, 6606.0], [1380.0, 6606.0], [1384.0, 7347.0], [1392.0, 6375.0], [1356.0, 7146.5], [1352.0, 6716.0], [1348.0, 7462.0], [1344.0, 7567.0], [1372.0, 6630.0], [1368.0, 6772.0], [1364.0, 7372.0], [1360.0, 6701.0], [1388.0, 6950.0], [1464.0, 5689.0], [1440.0, 5932.0], [1444.0, 6518.0], [1448.0, 6515.0], [1468.0, 5505.0], [1460.0, 6041.0], [1456.0, 6274.0], [1408.0, 6256.0], [1412.0, 6525.0], [1420.0, 6422.0], [1436.0, 6335.0], [1432.0, 5964.0], [1428.0, 6189.0], [1424.0, 6777.0], [1452.0, 6891.0], [1524.0, 5655.0], [1508.0, 5345.0], [1504.0, 5279.0], [1512.0, 5152.0], [1528.0, 4979.0], [1520.0, 4988.0], [1472.0, 5651.0], [1476.0, 5673.0], [1480.0, 6040.0], [1484.0, 5400.0], [1500.0, 5244.0], [1496.0, 5296.0], [1492.0, 5432.5], [1488.0, 5360.0], [1596.0, 5201.0], [1588.0, 4580.0], [1568.0, 4735.0], [1572.0, 5348.0], [1576.0, 4663.0], [1580.0, 4644.0], [1584.0, 5370.0], [1536.0, 5554.0], [1540.0, 5552.0], [1544.0, 5509.0], [1564.0, 5380.0], [1556.0, 5013.0], [1552.0, 5436.0], [1656.0, 4225.0], [1660.0, 4496.0], [1640.0, 4294.0], [1632.0, 4330.0], [1636.0, 4946.0], [1644.0, 4262.0], [1652.0, 4296.0], [1648.0, 4307.0], [1612.0, 4541.0], [1608.0, 4495.0], [1624.0, 4772.0], [1620.0, 5025.0], [1616.0, 5059.0], [1712.0, 4310.0], [1724.0, 4106.0], [1704.0, 4173.0], [1716.0, 3971.0], [1664.0, 5136.0], [1668.0, 4118.0], [1672.0, 4230.0], [1676.0, 4224.0], [1688.0, 4323.0], [1684.0, 4328.0], [1680.0, 4216.0], [1780.0, 4080.5], [1760.0, 4230.5], [1764.0, 4578.0], [1768.0, 4604.0], [1772.0, 3811.0], [1784.0, 4221.5], [1776.0, 3746.0], [1740.0, 3912.0], [1736.0, 3906.0], [1732.0, 4694.0], [1756.0, 3877.0], [1748.0, 4016.0], [1744.0, 4451.0], [1848.0, 3612.0], [1832.0, 3588.0], [1824.0, 4011.5], [1828.0, 4479.0], [1836.0, 3656.0], [1852.0, 3689.0], [1844.0, 4131.0], [1800.0, 4523.0], [1792.0, 4691.0], [1820.0, 4314.0], [1816.0, 3901.0], [1812.0, 3840.0], [1808.0, 3920.0], [1912.0, 3622.5], [1888.0, 3638.5], [1896.0, 3502.0], [1900.0, 3470.0], [1916.0, 3594.0], [1908.0, 3559.0], [1868.0, 3586.0], [1880.0, 3520.0], [1876.0, 3534.0], [1872.0, 3757.0], [1976.0, 3469.3333333333335], [1972.0, 3876.0], [1956.0, 3914.8], [1952.0, 4072.5], [1960.0, 3355.0], [1964.0, 4096.5], [1980.0, 3190.0], [1968.0, 4212.0], [1932.0, 4226.0], [1924.0, 3526.0], [1920.0, 3466.0], [1948.0, 4294.0], [1944.0, 3550.0], [1940.0, 3473.0], [1936.0, 3311.5], [2044.0, 2816.0], [2020.0, 3447.0], [2024.0, 3177.0], [2028.0, 2908.0], [2040.0, 2855.0], [1996.0, 4028.0], [1992.0, 3799.0], [1988.0, 4045.0], [1984.0, 3290.0], [2012.0, 3223.0], [2008.0, 4221.0], [2000.0, 3936.0], [2160.0, 2401.0], [2152.0, 3029.0], [2112.0, 3284.5], [2120.0, 2674.0], [2128.0, 2694.0], [2136.0, 3170.6], [2168.0, 2461.0], [2144.0, 3332.5], [2064.0, 2755.0], [2056.0, 3844.0], [2048.0, 3102.5], [2104.0, 3298.0], [2096.0, 3306.0], [2088.0, 3357.0], [2080.0, 3080.0], [2288.0, 2151.0], [2256.0, 2565.0], [2264.0, 2280.0], [2296.0, 2059.0], [2280.0, 2546.0], [2176.0, 2856.0], [2192.0, 2326.0], [2232.0, 2715.0], [2224.0, 3149.0], [2208.0, 2363.0], [2424.0, 1569.0], [2368.0, 1879.0], [2376.0, 1995.0], [2384.0, 1719.0], [2392.0, 1828.0], [2416.0, 1802.0], [2408.0, 1670.75], [2400.0, 2379.0], [2312.0, 2785.0], [2320.0, 2134.0], [2328.0, 3007.0], [2360.0, 2543.0], [2352.0, 1877.0], [2344.0, 2393.5], [2336.0, 2055.5], [2432.0, 1618.5], [2456.0, 1490.5], [2448.0, 1575.0], [2440.0, 1888.0], [2488.0, 2365.0], [2480.0, 1887.0], [2472.0, 1641.0], [2464.0, 1383.0], [2169.0, 2432.0], [2161.0, 2420.0], [2113.0, 3280.0], [2121.0, 2706.0], [2129.0, 3258.0], [2137.0, 2958.0], [2153.0, 2637.0], [2145.0, 3300.0], [2073.0, 3181.0], [2057.0, 2961.0], [2089.0, 2648.0], [2297.0, 2052.0], [2241.0, 2410.0], [2249.0, 2510.3333333333335], [2257.0, 2538.0], [2265.0, 3324.0], [2289.0, 2097.0], [2281.0, 2171.0], [2273.0, 2121.0], [2177.0, 3373.0], [2185.0, 2480.0], [2233.0, 2412.0], [2217.0, 2363.0], [2417.0, 1595.0], [2377.0, 1800.0], [2385.0, 2408.0], [2425.0, 1546.0], [2409.0, 1687.0], [2305.0, 2090.5], [2313.0, 1990.0], [2321.0, 1977.0], [2329.0, 2107.0], [2361.0, 2039.0], [2353.0, 1870.0], [2345.0, 1995.0], [2337.0, 2974.0], [2433.0, 2122.0], [2441.0, 1519.0], [2457.0, 1635.0], [2449.0, 1491.6666666666667], [2489.0, 2324.0], [2481.0, 1247.0], [2473.0, 1403.0], [2465.0, 1602.0], [1073.0, 8731.0], [1081.0, 8926.0], [1057.0, 9727.0], [1061.0, 8794.0], [1085.0, 8850.0], [1077.0, 8862.0], [1025.0, 9110.0], [1029.0, 9049.0], [1033.0, 9149.0], [1037.0, 9307.0], [1053.0, 9032.0], [1049.0, 9753.0], [1045.0, 9656.0], [1041.0, 8921.0], [1069.0, 9164.0], [1145.0, 8465.0], [1121.0, 8733.0], [1125.0, 8319.0], [1129.0, 8432.0], [1149.0, 8420.0], [1141.0, 8483.0], [1137.0, 8762.5], [1089.0, 8846.0], [1093.0, 9660.0], [1097.0, 9363.0], [1101.0, 8850.0], [1117.0, 8702.0], [1113.0, 9255.0], [1109.0, 8609.0], [1105.0, 8936.5], [1133.0, 8559.0], [1209.0, 8117.0], [1185.0, 7893.0], [1189.0, 7991.0], [1193.0, 8627.0], [1213.0, 7674.0], [1205.0, 7774.0], [1201.0, 8451.0], [1153.0, 8687.0], [1157.0, 8156.0], [1161.0, 8182.0], [1165.0, 8159.0], [1181.0, 8091.0], [1177.0, 7953.0], [1173.0, 8416.0], [1169.0, 8728.0], [1197.0, 7834.0], [1269.0, 8015.0], [1253.0, 7531.0], [1257.0, 7479.0], [1273.0, 7220.0], [1265.0, 7990.0], [1225.0, 7669.0], [1221.0, 7799.0], [1217.0, 8459.0], [1245.0, 8142.0], [1241.0, 7714.0], [1233.0, 8343.0], [1261.0, 7685.0], [1329.0, 7005.5], [1341.0, 7332.0], [1313.0, 7741.0], [1337.0, 6767.0], [1281.0, 7990.0], [1285.0, 7374.0], [1289.0, 7176.0], [1293.0, 7133.0], [1309.0, 7131.0], [1305.0, 7367.0], [1301.0, 6895.0], [1297.0, 7278.0], [1325.0, 6993.0], [1317.0, 7256.0], [1401.0, 7190.0], [1377.0, 6622.0], [1381.0, 6930.0], [1385.0, 6545.0], [1405.0, 6398.0], [1397.0, 6552.0], [1393.0, 7194.0], [1353.0, 6449.0], [1357.0, 6864.0], [1373.0, 7098.0], [1369.0, 6782.0], [1361.0, 6619.0], [1389.0, 7328.0], [1465.0, 5791.0], [1441.0, 6641.0], [1445.0, 6137.0], [1449.0, 5946.0], [1469.0, 5434.0], [1461.0, 5784.0], [1457.0, 5633.0], [1409.0, 6394.0], [1413.0, 6731.0], [1417.0, 6231.0], [1421.0, 6233.0], [1437.0, 6934.0], [1433.0, 5976.0], [1429.0, 6175.0], [1425.0, 6103.0], [1453.0, 6433.0], [1533.0, 5051.5], [1509.0, 5160.0], [1517.0, 5269.5], [1513.0, 5080.0], [1529.0, 4945.0], [1525.0, 5251.0], [1521.0, 5119.0], [1485.0, 5324.0], [1481.0, 6126.0], [1477.0, 6051.0], [1501.0, 5571.0], [1493.0, 5344.0], [1489.0, 5595.0], [1593.0, 4557.0], [1597.0, 4733.0], [1569.0, 4953.0], [1573.0, 4708.0], [1577.0, 4758.0], [1589.0, 4550.0], [1585.0, 4643.0], [1537.0, 4873.0], [1541.0, 5093.0], [1545.0, 4999.0], [1565.0, 4740.0], [1561.0, 4726.0], [1557.0, 5809.0], [1653.0, 4298.5], [1661.0, 4830.0], [1633.0, 4455.0], [1637.0, 4387.0], [1641.0, 4362.0], [1645.0, 4887.0], [1649.0, 4375.0], [1613.0, 5436.0], [1609.0, 4473.0], [1605.0, 4725.0], [1601.0, 4487.0], [1629.0, 4880.5], [1621.0, 4350.0], [1617.0, 4453.0], [1717.0, 4041.0], [1697.0, 4643.0], [1701.0, 4643.333333333333], [1705.0, 4265.0], [1709.0, 4322.0], [1721.0, 4056.5], [1665.0, 4247.0], [1677.0, 4153.0], [1689.0, 4122.0], [1685.0, 4061.0], [1681.0, 4145.0], [1781.0, 4446.0], [1789.0, 4115.333333333333], [1765.0, 3937.0], [1761.0, 4484.0], [1773.0, 3836.0], [1777.0, 3800.0], [1741.0, 4035.0], [1737.0, 3995.0], [1733.0, 4079.0], [1757.0, 3845.0], [1749.0, 3934.0], [1745.0, 4025.0], [1853.0, 3823.0], [1825.0, 3639.0], [1829.0, 3864.0], [1833.0, 3617.0], [1837.0, 3652.0], [1845.0, 3631.0], [1841.0, 4056.5], [1805.0, 3918.3333333333335], [1801.0, 3926.0], [1797.0, 4590.0], [1793.0, 3779.0], [1821.0, 4080.0], [1817.0, 3673.0], [1813.0, 3674.0], [1809.0, 3719.0], [1913.0, 3452.0], [1917.0, 3835.0], [1889.0, 3589.0], [1893.0, 3975.5], [1897.0, 3497.0], [1901.0, 3643.0], [1909.0, 3842.0], [1905.0, 3607.5], [1857.0, 4512.0], [1861.0, 4105.5], [1865.0, 3746.0], [1869.0, 4606.0], [1881.0, 4173.0], [1877.0, 3606.0], [1873.0, 3658.0], [1973.0, 4091.0], [1957.0, 3310.0], [1965.0, 4217.0], [1977.0, 4111.0], [1929.0, 3814.0], [1925.0, 3401.0], [1921.0, 3557.0], [1949.0, 3831.0], [1945.0, 3416.0], [2041.0, 2770.0], [2033.0, 3160.0], [2021.0, 3063.0], [2017.0, 3395.6666666666665], [2025.0, 3300.5], [2029.0, 2965.0], [1997.0, 4027.0], [1993.0, 3798.0], [1989.0, 3928.0], [1985.0, 4072.0], [2013.0, 3221.0], [2009.0, 3228.0], [2005.0, 3824.0], [2001.0, 3495.0], [2170.0, 2424.0], [2122.0, 2707.0], [2114.0, 3295.0], [2130.0, 2640.0], [2138.0, 3322.0], [2162.0, 3055.0], [2154.0, 3436.0], [2074.0, 3396.0], [2066.0, 2717.0], [2058.0, 3072.0], [2050.0, 3104.5], [2098.0, 3041.0], [2082.0, 3358.0], [2290.0, 2099.0], [2298.0, 2101.0], [2242.0, 2673.25], [2250.0, 2945.0], [2258.0, 2999.0], [2266.0, 2891.0], [2282.0, 2136.0], [2274.0, 2842.0], [2178.0, 2973.0], [2186.0, 2364.0], [2194.0, 2409.0], [2202.0, 2549.0], [2226.0, 2274.0], [2218.0, 2353.5], [2210.0, 2830.0], [2426.0, 1593.0], [2378.0, 2439.0], [2386.0, 2426.0], [2394.0, 1690.5], [2418.0, 1592.0], [2410.0, 1646.0], [2402.0, 2542.5], [2314.0, 2706.0], [2322.0, 2741.0], [2330.0, 2656.0], [2362.0, 2151.0], [2354.0, 1898.0], [2346.0, 2057.0], [2338.0, 2069.0], [2450.0, 1442.0], [2490.0, 1193.0], [2458.0, 2011.0], [2442.0, 1509.0], [2482.0, 1946.0], [2474.0, 2024.0], [2466.0, 2054.0], [2171.0, 3477.0], [2163.0, 2522.0], [2115.0, 3367.0], [2123.0, 2860.0], [2131.0, 2669.0], [2139.0, 3476.0], [2155.0, 2553.0], [2147.0, 3547.0], [2075.0, 3738.0], [2067.0, 2751.0], [2059.0, 2754.0], [2107.0, 2783.6666666666665], [2099.0, 3305.0], [2083.0, 2710.5], [2283.0, 2810.0], [2275.0, 2839.0], [2251.0, 2930.0], [2267.0, 2275.0], [2291.0, 2220.0], [2179.0, 2344.0], [2187.0, 2473.0], [2195.0, 2614.0], [2235.0, 2720.5], [2227.0, 2980.0], [2211.0, 2384.0], [2427.0, 2594.0], [2419.0, 2283.0], [2371.0, 1818.5], [2379.0, 2817.0], [2387.0, 2736.0], [2395.0, 1699.0], [2403.0, 1678.0], [2315.0, 2064.0], [2323.0, 2119.0], [2355.0, 2176.0], [2347.0, 2698.0], [2339.0, 2001.0], [2459.0, 2066.0], [2451.0, 1666.0], [2435.0, 2014.5], [539.0, 11105.0], [541.0, 11246.0], [537.0, 10998.0], [519.0, 11342.0], [517.0, 11037.0], [515.0, 11187.0], [513.0, 11123.0], [535.0, 11175.0], [533.0, 11127.0], [531.0, 11761.0], [529.0, 11003.0], [527.0, 11922.0], [525.0, 11309.0], [523.0, 11060.0], [521.0, 11338.0], [573.0, 11013.0], [575.0, 10816.0], [571.0, 10886.0], [569.0, 10689.0], [567.0, 11121.0], [565.0, 10854.0], [563.0, 10709.0], [561.0, 10743.0], [559.0, 10994.666666666666], [551.0, 11432.0], [549.0, 11166.0], [547.0, 11638.0], [545.0, 11089.0], [553.0, 11001.0], [605.0, 11426.0], [607.0, 10946.0], [603.0, 10821.0], [601.0, 10969.0], [599.0, 10971.0], [597.0, 10753.0], [593.0, 10713.0], [591.0, 10716.0], [579.0, 11291.0], [577.0, 10757.0], [583.0, 11481.0], [581.0, 10891.0], [589.0, 11039.0], [587.0, 10759.5], [585.0, 11480.0], [633.0, 10895.0], [639.0, 11005.333333333334], [625.0, 10684.666666666666], [635.0, 10706.0], [621.0, 10754.0], [615.0, 10638.0], [609.0, 11410.0], [619.0, 10620.0], [617.0, 10762.0], [629.0, 10872.0], [627.0, 10900.0], [667.0, 10599.5], [671.0, 10770.0], [657.0, 10679.5], [659.0, 10754.0], [665.0, 10737.0], [647.0, 10558.0], [645.0, 10486.0], [643.0, 10428.0], [641.0, 10690.0], [655.0, 11372.0], [653.0, 10821.0], [651.0, 10829.0], [649.0, 10698.0], [663.0, 10469.0], [661.0, 10634.0], [699.0, 10538.0], [697.0, 10326.0], [703.0, 10273.0], [689.0, 10298.0], [691.0, 10401.0], [693.0, 10635.0], [701.0, 10298.0], [677.0, 11316.0], [675.0, 10591.0], [673.0, 10443.0], [687.0, 10557.0], [685.0, 10458.0], [683.0, 10411.0], [681.0, 10553.333333333334], [695.0, 10391.0], [733.0, 10303.0], [735.0, 10087.0], [721.0, 10303.0], [723.0, 10476.0], [725.0, 10233.0], [731.0, 10142.0], [729.0, 10134.0], [719.0, 10290.0], [705.0, 10455.0], [709.0, 10230.0], [711.0, 10509.0], [717.0, 10360.0], [715.0, 10297.0], [713.0, 10266.0], [727.0, 10406.0], [765.0, 10245.0], [767.0, 10674.0], [753.0, 10071.5], [755.0, 9971.0], [757.0, 9957.0], [763.0, 9937.0], [761.0, 9822.0], [751.0, 9989.0], [737.0, 10697.5], [739.0, 10193.0], [741.0, 10106.0], [743.0, 10152.0], [749.0, 9896.0], [747.0, 10027.0], [745.0, 10026.0], [759.0, 9946.0], [793.0, 10462.0], [799.0, 10076.0], [785.0, 9874.0], [797.0, 9830.0], [775.0, 9783.0], [771.0, 10105.0], [769.0, 10163.0], [781.0, 9933.0], [779.0, 10072.0], [777.0, 10042.0], [791.0, 9885.0], [829.0, 9737.0], [831.0, 9682.0], [817.0, 9842.0], [819.0, 9758.0], [827.0, 9722.0], [825.0, 9674.0], [807.0, 10013.0], [805.0, 10111.0], [801.0, 9851.0], [815.0, 9701.0], [813.0, 9705.0], [811.0, 9802.0], [809.0, 9629.0], [821.0, 10121.0], [857.0, 9581.0], [861.0, 10125.5], [849.0, 9614.0], [859.0, 9518.0], [847.0, 9592.5], [833.0, 9679.0], [837.0, 9937.0], [835.0, 9662.0], [839.0, 9602.0], [845.0, 9881.0], [843.0, 9604.0], [841.0, 9914.0], [855.0, 9824.0], [851.0, 9727.0], [891.0, 9878.333333333334], [895.0, 9738.0], [881.0, 9929.0], [893.0, 9436.0], [879.0, 9774.0], [871.0, 9387.0], [869.0, 9646.0], [877.0, 9600.0], [875.0, 9384.0], [873.0, 9786.0], [887.0, 9628.0], [885.0, 9523.5], [903.0, 9563.5], [925.0, 9393.5], [923.0, 9380.0], [921.0, 9626.0], [901.0, 9652.0], [899.0, 9443.0], [897.0, 9724.0], [911.0, 9215.0], [909.0, 9348.0], [907.0, 9352.0], [905.0, 10069.0], [919.0, 9854.0], [917.0, 9435.0], [953.0, 9234.0], [957.0, 9450.0], [947.0, 9222.0], [955.0, 9276.0], [935.0, 9556.0], [931.0, 9582.0], [929.0, 9757.0], [943.0, 9306.0], [937.0, 9411.0], [951.0, 9416.0], [949.0, 9358.0], [989.0, 9291.5], [979.0, 9712.0], [991.0, 9383.0], [977.0, 9299.0], [965.0, 9512.666666666666], [963.0, 10029.0], [975.0, 9295.0], [973.0, 9173.0], [969.0, 9314.0], [981.0, 9157.0], [999.0, 9219.0], [1023.0, 9213.0], [1011.0, 9056.5], [1019.0, 9324.666666666666], [997.0, 9160.0], [995.0, 10030.0], [993.0, 9286.0], [1007.0, 9116.0], [1001.0, 9837.0], [1015.0, 9110.0], [1013.0, 9206.0], [1030.0, 9708.0], [1086.0, 9066.0], [1058.0, 9046.0], [1038.0, 9191.0], [1026.0, 8971.0], [1050.0, 9251.0], [1046.0, 9873.0], [1042.0, 8894.0], [1066.0, 9130.666666666666], [1062.0, 8765.0], [1146.0, 8372.0], [1150.0, 8419.0], [1122.0, 8547.0], [1126.0, 8530.0], [1130.0, 8384.0], [1142.0, 8366.0], [1138.0, 8542.0], [1102.0, 8801.0], [1098.0, 9024.0], [1094.0, 8743.0], [1090.0, 9225.0], [1114.0, 8405.0], [1110.0, 8725.0], [1106.0, 8762.0], [1134.0, 8535.0], [1206.0, 7630.0], [1202.0, 7879.0], [1214.0, 7872.0], [1186.0, 8634.0], [1190.0, 8014.0], [1194.0, 8695.0], [1210.0, 8240.0], [1166.0, 8731.0], [1162.0, 8090.0], [1154.0, 8270.0], [1182.0, 8701.0], [1178.0, 7941.0], [1174.0, 8026.0], [1170.0, 8676.0], [1198.0, 8596.0], [1274.0, 7016.0], [1278.0, 7561.5], [1250.0, 7481.5], [1254.0, 7537.0], [1270.0, 7337.0], [1266.0, 7243.0], [1246.0, 8210.0], [1218.0, 8451.0], [1222.0, 8302.0], [1230.0, 7592.0], [1242.0, 7467.0], [1238.0, 7756.0], [1234.0, 7928.0], [1262.0, 7427.0], [1338.0, 6733.0], [1342.0, 7552.0], [1314.0, 6921.0], [1318.0, 6695.0], [1322.0, 7660.0], [1334.0, 6646.0], [1330.0, 7709.0], [1294.0, 7292.0], [1290.0, 7253.0], [1286.0, 7582.0], [1282.0, 7380.0], [1310.0, 6821.0], [1306.0, 7709.0], [1302.0, 7815.0], [1298.0, 7867.0], [1326.0, 6948.0], [1398.0, 6453.0], [1394.0, 6626.0], [1406.0, 6451.0], [1378.0, 6633.0], [1382.0, 6552.0], [1386.0, 6543.0], [1402.0, 6584.0], [1358.0, 7328.0], [1354.0, 7239.0], [1350.0, 7153.0], [1346.0, 6853.0], [1374.0, 6767.0], [1366.0, 7074.0], [1362.0, 6676.0], [1390.0, 6697.0], [1466.0, 5510.0], [1470.0, 6069.0], [1442.0, 6138.0], [1446.0, 6073.0], [1450.0, 6131.0], [1462.0, 6072.0], [1458.0, 5661.0], [1438.0, 5933.0], [1410.0, 7171.0], [1418.0, 6444.0], [1414.0, 6783.0], [1422.0, 6227.0], [1434.0, 6400.0], [1430.0, 5904.0], [1454.0, 5887.0], [1530.0, 4915.0], [1534.0, 5311.0], [1506.0, 5592.0], [1510.0, 6214.0], [1518.0, 5135.0], [1526.0, 5317.0], [1522.0, 5682.0], [1502.0, 5273.0], [1474.0, 5390.0], [1478.0, 5716.0], [1482.0, 5672.0], [1486.0, 5655.0], [1498.0, 5504.5], [1494.0, 5527.0], [1490.0, 5969.0], [1590.0, 5218.0], [1586.0, 4636.0], [1574.0, 4670.0], [1578.0, 5299.0], [1582.0, 4665.5], [1598.0, 4853.0], [1538.0, 4858.0], [1542.0, 5925.0], [1546.0, 4804.0], [1566.0, 4828.0], [1562.0, 5154.0], [1558.0, 4993.0], [1554.0, 5213.0], [1662.0, 4377.0], [1634.0, 5378.0], [1638.0, 4922.0], [1642.0, 4982.0], [1646.0, 4317.0], [1658.0, 4551.666666666667], [1650.0, 4659.0], [1614.0, 5093.0], [1610.0, 4421.0], [1606.0, 5535.0], [1602.0, 5535.0], [1630.0, 4976.0], [1626.0, 4363.5], [1618.0, 4508.0], [1714.0, 4368.5], [1718.0, 4120.0], [1698.0, 4419.0], [1706.0, 4172.0], [1710.0, 4723.0], [1666.0, 4087.0], [1670.0, 4612.5], [1674.0, 4388.5], [1678.0, 4220.0], [1690.0, 4181.0], [1682.0, 4101.0], [1778.0, 3724.0], [1782.0, 4796.0], [1786.0, 4205.0], [1762.0, 3863.0], [1774.0, 4185.0], [1790.0, 4409.0], [1742.0, 3970.0], [1738.0, 3978.0], [1734.0, 4963.0], [1758.0, 4888.0], [1754.0, 4309.333333333333], [1750.0, 3992.0], [1746.0, 3942.0], [1850.0, 3592.0], [1826.0, 3948.0], [1834.0, 3738.0], [1838.0, 3733.0], [1846.0, 3798.0], [1842.0, 3601.0], [1806.0, 4145.0], [1802.0, 3747.5], [1798.0, 3854.0], [1794.0, 3779.0], [1822.0, 3768.0], [1814.0, 4040.0], [1810.0, 3779.0], [1914.0, 4362.0], [1918.0, 3433.0], [1894.0, 3659.0], [1898.0, 3799.0], [1910.0, 3424.0], [1906.0, 3715.0], [1886.0, 3871.0], [1858.0, 4502.0], [1866.0, 3868.5], [1870.0, 3757.0], [1874.0, 3656.0], [1970.0, 4136.5], [1978.0, 4103.0], [1958.0, 4045.0], [1966.0, 4010.0], [1934.0, 3328.5], [1930.0, 3826.0], [1926.0, 3547.0], [1922.0, 3423.0], [1946.0, 3478.0], [1942.0, 4206.0], [1938.0, 3917.0], [2034.0, 2910.0], [2046.0, 2907.0], [2026.0, 3113.0], [2030.0, 3042.0], [2038.0, 2800.5], [1998.0, 3267.0], [1994.0, 3371.0], [1990.0, 3283.0], [1986.0, 3413.0], [2014.0, 3220.0], [2006.0, 3676.0], [2002.0, 3898.0], [2148.0, 3015.0], [2124.0, 3249.0], [2164.0, 2521.0], [2156.0, 3170.0], [2068.0, 2764.0], [2060.0, 2859.0], [2052.0, 2797.5], [2108.0, 2898.0], [2100.0, 3304.0], [2092.0, 3028.0], [2084.0, 2725.0], [2292.0, 2141.0], [2244.0, 2729.0], [2284.0, 3101.0], [2252.0, 2310.0], [2260.0, 2576.5], [2268.0, 2182.0], [2300.0, 2138.5], [2180.0, 2491.0], [2188.0, 2367.0], [2204.0, 2313.0], [2236.0, 2351.0], [2220.0, 2304.0], [2420.0, 1586.0], [2380.0, 2032.0], [2388.0, 2727.0], [2396.0, 1745.0], [2428.0, 2594.0], [2404.0, 2722.0], [2308.0, 2447.5], [2316.0, 2062.0], [2324.0, 2064.0], [2332.0, 2386.5], [2364.0, 1900.5], [2356.0, 1908.0], [2348.0, 2281.0], [2340.0, 2067.0], [2460.0, 2448.0], [2452.0, 1452.5], [2500.0, 1352.142857142857], [2444.0, 1578.0], [2492.0, 1293.0], [2484.0, 1936.5], [2468.0, 1744.0], [2173.0, 2503.0], [2117.0, 3271.0], [2125.0, 2580.0], [2141.0, 3043.5], [2165.0, 3493.0], [2157.0, 2466.0], [2149.0, 3124.0], [2077.0, 2767.0], [2069.0, 3383.0], [2053.0, 3409.0], [2109.0, 2783.0], [2085.0, 3738.0], [2277.0, 2298.0], [2293.0, 2126.0], [2253.0, 2309.0], [2261.0, 2934.0], [2269.0, 2178.0], [2237.0, 2255.0], [2181.0, 2488.0], [2197.0, 2843.0], [2205.0, 2312.0], [2221.0, 2358.0], [2213.0, 3009.0], [2429.0, 1518.0], [2381.0, 1736.0], [2389.0, 1882.0], [2397.0, 2364.0], [2421.0, 1578.0], [2413.0, 1924.0], [2309.0, 2694.0], [2317.0, 2714.0], [2325.0, 2686.0], [2333.0, 2668.0], [2357.0, 2012.0], [2349.0, 1893.0], [2437.0, 1869.5], [2445.0, 2142.0], [2453.0, 1473.0], [2477.0, 1259.0], [2469.0, 1368.0], [1079.0, 9209.5], [1087.0, 8694.0], [1059.0, 8748.0], [1083.0, 8991.0], [1075.0, 9039.5], [1055.0, 9421.5], [1027.0, 9937.0], [1031.0, 9236.0], [1035.0, 9050.0], [1051.0, 9699.0], [1047.0, 9859.0], [1043.0, 9174.0], [1063.0, 9792.0], [1147.0, 8013.0], [1151.0, 8950.0], [1123.0, 8438.0], [1127.0, 8655.0], [1131.0, 8320.0], [1143.0, 9041.0], [1139.0, 8257.0], [1119.0, 8579.0], [1091.0, 9512.0], [1095.0, 8804.0], [1099.0, 9670.0], [1103.0, 9049.0], [1115.0, 8622.0], [1111.0, 8835.0], [1107.0, 8937.0], [1135.0, 8606.0], [1211.0, 8411.0], [1215.0, 7666.0], [1187.0, 7828.0], [1191.0, 7969.0], [1195.0, 7971.0], [1207.0, 8524.0], [1203.0, 7681.0], [1183.0, 7950.0], [1155.0, 8201.0], [1159.0, 8006.0], [1163.0, 8008.0], [1167.0, 8767.0], [1179.0, 7924.0], [1175.0, 8182.0], [1171.0, 8183.0], [1199.0, 7781.0], [1267.0, 7234.0], [1275.0, 7404.0], [1279.0, 7416.0], [1251.0, 7554.0], [1255.0, 7482.0], [1271.0, 7785.0], [1231.0, 7703.0], [1227.0, 7660.0], [1223.0, 7623.0], [1247.0, 8168.0], [1243.0, 7534.0], [1239.0, 7732.0], [1235.0, 7582.0], [1259.0, 7757.5], [1291.0, 7336.0], [1343.0, 6863.0], [1339.0, 6733.0], [1331.0, 7085.0], [1311.0, 6932.0], [1283.0, 7418.0], [1287.0, 6965.0], [1295.0, 7206.0], [1307.0, 7806.0], [1299.0, 7273.0], [1327.0, 6895.5], [1323.0, 7005.5], [1403.0, 6850.0], [1407.0, 6578.0], [1379.0, 6810.0], [1383.0, 6988.0], [1387.0, 6347.0], [1399.0, 6179.0], [1395.0, 7277.0], [1375.0, 6758.0], [1347.0, 6871.0], [1351.0, 6759.0], [1359.0, 6706.0], [1367.0, 6753.0], [1363.0, 7210.0], [1391.0, 6928.0], [1467.0, 6199.0], [1471.0, 6432.0], [1443.0, 6538.0], [1447.0, 6252.0], [1451.0, 6133.0], [1463.0, 5636.0], [1459.0, 5594.0], [1439.0, 5856.0], [1411.0, 6785.0], [1415.0, 6462.0], [1419.0, 7109.0], [1423.0, 6260.0], [1435.0, 6341.0], [1431.0, 5919.0], [1455.0, 5920.0], [1487.0, 5600.0], [1531.0, 4905.0], [1535.0, 5460.0], [1507.0, 5349.0], [1511.0, 5387.0], [1519.0, 5124.0], [1483.0, 5337.0], [1479.0, 5354.0], [1475.0, 5468.0], [1499.0, 5483.0], [1495.0, 5299.0], [1595.0, 5156.0], [1599.0, 5549.0], [1571.0, 4792.5], [1575.0, 4848.0], [1579.0, 4677.0], [1583.0, 4659.0], [1591.0, 5202.0], [1587.0, 4831.0], [1567.0, 4741.0], [1539.0, 4849.0], [1543.0, 5553.0], [1551.0, 4847.25], [1547.0, 4870.0], [1563.0, 5394.0], [1559.0, 4785.0], [1555.0, 5508.0], [1659.0, 4340.0], [1663.0, 4814.0], [1635.0, 4400.0], [1639.0, 4937.0], [1643.0, 4211.0], [1647.0, 4860.0], [1655.0, 4193.0], [1615.0, 4527.0], [1611.0, 4428.0], [1607.0, 4470.0], [1603.0, 4733.0], [1631.0, 4506.0], [1627.0, 4375.0], [1623.0, 4750.5], [1619.0, 4418.0], [1719.0, 4212.0], [1703.0, 4212.5], [1711.0, 4705.0], [1723.0, 4589.0], [1715.0, 3972.0], [1695.0, 4722.25], [1667.0, 4240.0], [1671.0, 4230.0], [1675.0, 4227.0], [1679.0, 4218.0], [1691.0, 4719.0], [1687.0, 4180.0], [1683.0, 4065.0], [1739.0, 3923.0], [1791.0, 3783.0], [1763.0, 3943.0], [1767.0, 3894.5], [1771.0, 4166.333333333333], [1775.0, 3822.0], [1735.0, 4008.0], [1731.0, 4234.125], [1755.0, 3846.0], [1751.0, 4566.0], [1747.0, 3944.0], [1855.0, 3856.5], [1851.0, 4004.0], [1827.0, 3637.0], [1831.0, 3861.0], [1835.0, 3854.0], [1839.0, 3668.0], [1847.0, 4368.0], [1843.0, 3875.0], [1807.0, 4677.0], [1795.0, 4404.0], [1819.0, 3712.0], [1815.0, 4355.0], [1811.0, 4561.0], [1867.0, 3668.0], [1895.0, 3739.0], [1915.0, 3397.0], [1891.0, 3702.0], [1899.0, 4049.0], [1903.0, 3662.0], [1859.0, 4215.0], [1883.0, 3516.0], [1879.0, 3714.0], [1875.0, 4444.0], [1971.0, 3440.0], [1931.0, 3556.0], [1983.0, 3788.0], [1959.0, 4040.0], [1967.0, 3818.0], [1979.0, 4092.0], [1927.0, 3370.0], [1923.0, 3532.0], [1947.0, 4423.0], [1943.0, 4192.0], [1939.0, 3521.0], [2039.0, 2779.0], [2019.0, 3287.0], [2027.0, 3520.0], [2043.0, 2930.0], [1995.0, 3803.0], [1991.0, 4265.0], [1987.0, 3935.0], [2011.0, 3592.5], [2007.0, 4133.0], [2003.0, 3251.0], [2158.0, 2445.0], [2150.0, 3547.0], [2166.0, 2515.0], [2126.0, 2572.0], [2142.0, 3053.0], [2174.0, 2987.5], [2078.0, 2812.0], [2070.0, 2709.0], [2054.0, 3792.0], [2110.0, 3291.0], [2102.0, 3011.0], [2094.0, 2780.0], [2086.0, 2706.0], [2302.0, 2097.5], [2246.0, 2324.5], [2254.0, 2259.0], [2262.0, 2287.0], [2270.0, 2254.0], [2286.0, 2329.0], [2278.0, 2751.0], [2182.0, 2534.0], [2190.0, 3023.0], [2222.0, 2373.0], [2422.0, 1562.0], [2414.0, 1628.3333333333333], [2430.0, 1707.0], [2382.0, 2786.0], [2390.0, 2755.0], [2398.0, 1744.0], [2310.0, 2443.5], [2318.0, 2082.0], [2326.0, 2053.0], [2366.0, 2247.5], [2358.0, 1935.0], [2350.0, 2045.0], [2342.0, 2527.0], [2486.0, 1586.0], [2462.0, 1468.5], [2454.0, 1432.0], [2438.0, 1626.0], [2478.0, 1302.0], [2470.0, 1415.0], [2159.0, 2541.0], [2175.0, 2653.0], [2119.0, 3044.5], [2127.0, 2655.0], [2151.0, 3099.0], [2079.0, 2766.0], [2071.0, 2770.0], [2063.0, 3280.6666666666665], [2103.0, 3294.0], [2095.0, 2875.0], [2087.0, 2718.0], [2287.0, 2338.0], [2295.0, 2073.0], [2303.0, 2102.0], [2263.0, 2283.0], [2279.0, 2194.0], [2183.0, 2371.0], [2191.0, 2895.0], [2199.0, 2430.0], [2207.0, 2455.5], [2223.0, 2631.5], [2215.0, 2374.5], [2415.0, 2322.0], [2383.0, 1774.0], [2375.0, 2281.4], [2391.0, 1700.0], [2399.0, 2743.0], [2367.0, 1885.0], [2311.0, 2080.0], [2319.0, 1982.0], [2327.0, 3031.0], [2335.0, 2020.0], [2359.0, 2161.0], [2351.0, 1968.0], [2439.0, 1684.0], [2463.0, 1515.0], [2495.0, 1184.0], [2487.0, 1363.0], [2471.0, 1489.0], [1.0, 13351.0]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}, {"data": [[1250.8100000000027, 7356.720000000012]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 19000.0, "minX": 1.75557732E12, "maxY": 246750.0, "series": [{"data": [[1.75557732E12, 246750.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75557732E12, 19000.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75557732E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7356.720000000012, "minX": 1.75557732E12, "maxY": 7356.720000000012, "series": [{"data": [[1.75557732E12, 7356.720000000012]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75557732E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7356.684800000001, "minX": 1.75557732E12, "maxY": 7356.684800000001, "series": [{"data": [[1.75557732E12, 7356.684800000001]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75557732E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4817.947600000003, "minX": 1.75557732E12, "maxY": 4817.947600000003, "series": [{"data": [[1.75557732E12, 4817.947600000003]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75557732E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1174.0, "minX": 1.75557732E12, "maxY": 13511.0, "series": [{"data": [[1.75557732E12, 13511.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75557732E12, 12099.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75557732E12, 13062.809999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75557732E12, 12487.699999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.75557732E12, 1174.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75557732E12, 7683.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75557732E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1419.0, "minX": 13.0, "maxY": 13187.0, "series": [{"data": [[140.0, 4996.0], [300.0, 3004.5], [315.0, 4025.0], [157.0, 7256.0], [319.0, 11200.0], [351.0, 12251.0], [24.0, 1419.0], [105.0, 6133.0], [214.0, 9969.5], [13.0, 13187.0], [108.0, 8192.0], [227.0, 5864.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 351.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1412.5, "minX": 13.0, "maxY": 13187.0, "series": [{"data": [[140.0, 4996.0], [300.0, 3004.0], [315.0, 4024.0], [157.0, 7256.0], [319.0, 11200.0], [351.0, 12251.0], [24.0, 1412.5], [105.0, 6133.0], [214.0, 9969.5], [13.0, 13187.0], [108.0, 8192.0], [227.0, 5864.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 351.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.75557732E12, "maxY": 41.666666666666664, "series": [{"data": [[1.75557732E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75557732E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.75557732E12, "maxY": 41.666666666666664, "series": [{"data": [[1.75557732E12, 41.666666666666664]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75557732E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.75557732E12, "maxY": 41.666666666666664, "series": [{"data": [[1.75557732E12, 41.666666666666664]], "isOverall": false, "label": "ดึงข้อมูลการส่งตัวภายในระบบ NCDs-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75557732E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.75557732E12, "maxY": 41.666666666666664, "series": [{"data": [[1.75557732E12, 41.666666666666664]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75557732E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

