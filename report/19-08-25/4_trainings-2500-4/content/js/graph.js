/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1839.0, "minX": 0.0, "maxY": 13564.0, "series": [{"data": [[0.0, 1839.0], [0.1, 2079.0], [0.2, 2129.0], [0.3, 2153.0], [0.4, 2184.0], [0.5, 2286.0], [0.6, 2310.0], [0.7, 2340.0], [0.8, 2354.0], [0.9, 2371.0], [1.0, 2377.0], [1.1, 2409.0], [1.2, 2420.0], [1.3, 2445.0], [1.4, 2451.0], [1.5, 2495.0], [1.6, 2520.0], [1.7, 2532.0], [1.8, 2545.0], [1.9, 2608.0], [2.0, 2618.0], [2.1, 2689.0], [2.2, 2716.0], [2.3, 2744.0], [2.4, 2746.0], [2.5, 2759.0], [2.6, 2771.0], [2.7, 2796.0], [2.8, 2800.0], [2.9, 2812.0], [3.0, 2823.0], [3.1, 2872.0], [3.2, 2877.0], [3.3, 2883.0], [3.4, 2904.0], [3.5, 2919.0], [3.6, 2921.0], [3.7, 2942.0], [3.8, 2949.0], [3.9, 2962.0], [4.0, 2966.0], [4.1, 2976.0], [4.2, 2995.0], [4.3, 3002.0], [4.4, 3005.0], [4.5, 3040.0], [4.6, 3052.0], [4.7, 3072.0], [4.8, 3086.0], [4.9, 3088.0], [5.0, 3099.0], [5.1, 3115.0], [5.2, 3121.0], [5.3, 3130.0], [5.4, 3138.0], [5.5, 3148.0], [5.6, 3159.0], [5.7, 3169.0], [5.8, 3176.0], [5.9, 3215.0], [6.0, 3221.0], [6.1, 3228.0], [6.2, 3246.0], [6.3, 3252.0], [6.4, 3257.0], [6.5, 3277.0], [6.6, 3285.0], [6.7, 3316.0], [6.8, 3321.0], [6.9, 3335.0], [7.0, 3343.0], [7.1, 3360.0], [7.2, 3373.0], [7.3, 3405.0], [7.4, 3416.0], [7.5, 3429.0], [7.6, 3444.0], [7.7, 3458.0], [7.8, 3471.0], [7.9, 3482.0], [8.0, 3491.0], [8.1, 3514.0], [8.2, 3539.0], [8.3, 3571.0], [8.4, 3581.0], [8.5, 3586.0], [8.6, 3595.0], [8.7, 3613.0], [8.8, 3644.0], [8.9, 3650.0], [9.0, 3662.0], [9.1, 3673.0], [9.2, 3678.0], [9.3, 3691.0], [9.4, 3700.0], [9.5, 3703.0], [9.6, 3729.0], [9.7, 3745.0], [9.8, 3768.0], [9.9, 3775.0], [10.0, 3799.0], [10.1, 3809.0], [10.2, 3819.0], [10.3, 3826.0], [10.4, 3856.0], [10.5, 3862.0], [10.6, 3874.0], [10.7, 3902.0], [10.8, 3925.0], [10.9, 3936.0], [11.0, 3949.0], [11.1, 3962.0], [11.2, 3976.0], [11.3, 3987.0], [11.4, 3997.0], [11.5, 4001.0], [11.6, 4010.0], [11.7, 4032.0], [11.8, 4057.0], [11.9, 4069.0], [12.0, 4099.0], [12.1, 4118.0], [12.2, 4138.0], [12.3, 4149.0], [12.4, 4176.0], [12.5, 4179.0], [12.6, 4199.0], [12.7, 4210.0], [12.8, 4235.0], [12.9, 4237.0], [13.0, 4282.0], [13.1, 4308.0], [13.2, 4327.0], [13.3, 4352.0], [13.4, 4358.0], [13.5, 4362.0], [13.6, 4382.0], [13.7, 4392.0], [13.8, 4409.0], [13.9, 4423.0], [14.0, 4446.0], [14.1, 4460.0], [14.2, 4465.0], [14.3, 4502.0], [14.4, 4516.0], [14.5, 4549.0], [14.6, 4579.0], [14.7, 4599.0], [14.8, 4614.0], [14.9, 4630.0], [15.0, 4655.0], [15.1, 4660.0], [15.2, 4671.0], [15.3, 4685.0], [15.4, 4692.0], [15.5, 4700.0], [15.6, 4722.0], [15.7, 4742.0], [15.8, 4752.0], [15.9, 4758.0], [16.0, 4772.0], [16.1, 4795.0], [16.2, 4802.0], [16.3, 4807.0], [16.4, 4839.0], [16.5, 4858.0], [16.6, 4862.0], [16.7, 4879.0], [16.8, 4893.0], [16.9, 4906.0], [17.0, 4929.0], [17.1, 4943.0], [17.2, 4951.0], [17.3, 4954.0], [17.4, 4998.0], [17.5, 5002.0], [17.6, 5008.0], [17.7, 5020.0], [17.8, 5051.0], [17.9, 5057.0], [18.0, 5075.0], [18.1, 5089.0], [18.2, 5113.0], [18.3, 5145.0], [18.4, 5153.0], [18.5, 5161.0], [18.6, 5195.0], [18.7, 5201.0], [18.8, 5211.0], [18.9, 5220.0], [19.0, 5251.0], [19.1, 5254.0], [19.2, 5275.0], [19.3, 5310.0], [19.4, 5335.0], [19.5, 5348.0], [19.6, 5356.0], [19.7, 5371.0], [19.8, 5414.0], [19.9, 5432.0], [20.0, 5447.0], [20.1, 5460.0], [20.2, 5473.0], [20.3, 5486.0], [20.4, 5527.0], [20.5, 5570.0], [20.6, 5600.0], [20.7, 5614.0], [20.8, 5660.0], [20.9, 5664.0], [21.0, 5671.0], [21.1, 5694.0], [21.2, 5705.0], [21.3, 5705.0], [21.4, 5719.0], [21.5, 5743.0], [21.6, 5759.0], [21.7, 5773.0], [21.8, 5784.0], [21.9, 5786.0], [22.0, 5790.0], [22.1, 5796.0], [22.2, 5808.0], [22.3, 5822.0], [22.4, 5837.0], [22.5, 5840.0], [22.6, 5856.0], [22.7, 5857.0], [22.8, 5864.0], [22.9, 5867.0], [23.0, 5906.0], [23.1, 5938.0], [23.2, 5966.0], [23.3, 6000.0], [23.4, 6020.0], [23.5, 6037.0], [23.6, 6078.0], [23.7, 6083.0], [23.8, 6108.0], [23.9, 6130.0], [24.0, 6158.0], [24.1, 6173.0], [24.2, 6245.0], [24.3, 6277.0], [24.4, 6316.0], [24.5, 6363.0], [24.6, 6428.0], [24.7, 6453.0], [24.8, 6468.0], [24.9, 6474.0], [25.0, 6488.0], [25.1, 6502.0], [25.2, 6530.0], [25.3, 6535.0], [25.4, 6541.0], [25.5, 6558.0], [25.6, 6575.0], [25.7, 6583.0], [25.8, 6591.0], [25.9, 6597.0], [26.0, 6603.0], [26.1, 6609.0], [26.2, 6613.0], [26.3, 6619.0], [26.4, 6630.0], [26.5, 6643.0], [26.6, 6655.0], [26.7, 6674.0], [26.8, 6702.0], [26.9, 6706.0], [27.0, 6720.0], [27.1, 6746.0], [27.2, 6756.0], [27.3, 6774.0], [27.4, 6789.0], [27.5, 6800.0], [27.6, 6815.0], [27.7, 6834.0], [27.8, 6852.0], [27.9, 6875.0], [28.0, 6887.0], [28.1, 6909.0], [28.2, 6934.0], [28.3, 6942.0], [28.4, 6964.0], [28.5, 6974.0], [28.6, 6996.0], [28.7, 7004.0], [28.8, 7022.0], [28.9, 7034.0], [29.0, 7058.0], [29.1, 7089.0], [29.2, 7116.0], [29.3, 7130.0], [29.4, 7160.0], [29.5, 7166.0], [29.6, 7171.0], [29.7, 7172.0], [29.8, 7187.0], [29.9, 7207.0], [30.0, 7217.0], [30.1, 7225.0], [30.2, 7240.0], [30.3, 7245.0], [30.4, 7250.0], [30.5, 7261.0], [30.6, 7270.0], [30.7, 7279.0], [30.8, 7291.0], [30.9, 7308.0], [31.0, 7321.0], [31.1, 7327.0], [31.2, 7348.0], [31.3, 7349.0], [31.4, 7369.0], [31.5, 7374.0], [31.6, 7377.0], [31.7, 7381.0], [31.8, 7396.0], [31.9, 7396.0], [32.0, 7409.0], [32.1, 7433.0], [32.2, 7475.0], [32.3, 7491.0], [32.4, 7513.0], [32.5, 7539.0], [32.6, 7565.0], [32.7, 7579.0], [32.8, 7638.0], [32.9, 7670.0], [33.0, 7715.0], [33.1, 7755.0], [33.2, 7796.0], [33.3, 7843.0], [33.4, 7866.0], [33.5, 7886.0], [33.6, 7908.0], [33.7, 7911.0], [33.8, 7933.0], [33.9, 7946.0], [34.0, 7972.0], [34.1, 7988.0], [34.2, 8036.0], [34.3, 8052.0], [34.4, 8060.0], [34.5, 8121.0], [34.6, 8256.0], [34.7, 8280.0], [34.8, 8321.0], [34.9, 8341.0], [35.0, 8426.0], [35.1, 8444.0], [35.2, 8490.0], [35.3, 8529.0], [35.4, 8558.0], [35.5, 8595.0], [35.6, 8639.0], [35.7, 8665.0], [35.8, 8707.0], [35.9, 8733.0], [36.0, 8763.0], [36.1, 8780.0], [36.2, 8793.0], [36.3, 8895.0], [36.4, 8907.0], [36.5, 8911.0], [36.6, 8916.0], [36.7, 8932.0], [36.8, 8939.0], [36.9, 8942.0], [37.0, 8949.0], [37.1, 8951.0], [37.2, 8954.0], [37.3, 8958.0], [37.4, 8961.0], [37.5, 8963.0], [37.6, 8985.0], [37.7, 8995.0], [37.8, 8999.0], [37.9, 9002.0], [38.0, 9037.0], [38.1, 9063.0], [38.2, 9065.0], [38.3, 9087.0], [38.4, 9118.0], [38.5, 9143.0], [38.6, 9145.0], [38.7, 9157.0], [38.8, 9194.0], [38.9, 9209.0], [39.0, 9223.0], [39.1, 9239.0], [39.2, 9263.0], [39.3, 9266.0], [39.4, 9267.0], [39.5, 9273.0], [39.6, 9291.0], [39.7, 9296.0], [39.8, 9320.0], [39.9, 9339.0], [40.0, 9372.0], [40.1, 9385.0], [40.2, 9452.0], [40.3, 9512.0], [40.4, 9535.0], [40.5, 9567.0], [40.6, 9581.0], [40.7, 9591.0], [40.8, 9617.0], [40.9, 9617.0], [41.0, 9622.0], [41.1, 9633.0], [41.2, 9638.0], [41.3, 9643.0], [41.4, 9649.0], [41.5, 9653.0], [41.6, 9657.0], [41.7, 9657.0], [41.8, 9660.0], [41.9, 9671.0], [42.0, 9676.0], [42.1, 9685.0], [42.2, 9689.0], [42.3, 9698.0], [42.4, 9701.0], [42.5, 9704.0], [42.6, 9716.0], [42.7, 9724.0], [42.8, 9727.0], [42.9, 9730.0], [43.0, 9736.0], [43.1, 9741.0], [43.2, 9753.0], [43.3, 9761.0], [43.4, 9785.0], [43.5, 9794.0], [43.6, 9799.0], [43.7, 9803.0], [43.8, 9811.0], [43.9, 9823.0], [44.0, 9841.0], [44.1, 9851.0], [44.2, 9860.0], [44.3, 9868.0], [44.4, 9885.0], [44.5, 9895.0], [44.6, 9917.0], [44.7, 9922.0], [44.8, 9927.0], [44.9, 9940.0], [45.0, 9954.0], [45.1, 9957.0], [45.2, 9968.0], [45.3, 10012.0], [45.4, 10028.0], [45.5, 10041.0], [45.6, 10060.0], [45.7, 10070.0], [45.8, 10075.0], [45.9, 10078.0], [46.0, 10099.0], [46.1, 10100.0], [46.2, 10123.0], [46.3, 10128.0], [46.4, 10151.0], [46.5, 10160.0], [46.6, 10193.0], [46.7, 10248.0], [46.8, 10294.0], [46.9, 10307.0], [47.0, 10356.0], [47.1, 10368.0], [47.2, 10385.0], [47.3, 10415.0], [47.4, 10430.0], [47.5, 10441.0], [47.6, 10453.0], [47.7, 10480.0], [47.8, 10493.0], [47.9, 10513.0], [48.0, 10545.0], [48.1, 10550.0], [48.2, 10570.0], [48.3, 10596.0], [48.4, 10612.0], [48.5, 10629.0], [48.6, 10714.0], [48.7, 10774.0], [48.8, 10896.0], [48.9, 11048.0], [49.0, 11094.0], [49.1, 11178.0], [49.2, 11209.0], [49.3, 11226.0], [49.4, 11269.0], [49.5, 11297.0], [49.6, 11333.0], [49.7, 11339.0], [49.8, 11374.0], [49.9, 11406.0], [50.0, 11470.0], [50.1, 11472.0], [50.2, 11490.0], [50.3, 11502.0], [50.4, 11545.0], [50.5, 11567.0], [50.6, 11600.0], [50.7, 11613.0], [50.8, 11639.0], [50.9, 11641.0], [51.0, 11655.0], [51.1, 11661.0], [51.2, 11665.0], [51.3, 11673.0], [51.4, 11683.0], [51.5, 11686.0], [51.6, 11703.0], [51.7, 11717.0], [51.8, 11725.0], [51.9, 11726.0], [52.0, 11731.0], [52.1, 11743.0], [52.2, 11744.0], [52.3, 11757.0], [52.4, 11761.0], [52.5, 11763.0], [52.6, 11780.0], [52.7, 11781.0], [52.8, 11788.0], [52.9, 11791.0], [53.0, 11794.0], [53.1, 11800.0], [53.2, 11810.0], [53.3, 11811.0], [53.4, 11816.0], [53.5, 11829.0], [53.6, 11841.0], [53.7, 11841.0], [53.8, 11844.0], [53.9, 11847.0], [54.0, 11859.0], [54.1, 11860.0], [54.2, 11866.0], [54.3, 11871.0], [54.4, 11880.0], [54.5, 11885.0], [54.6, 11889.0], [54.7, 11890.0], [54.8, 11895.0], [54.9, 11896.0], [55.0, 11899.0], [55.1, 11900.0], [55.2, 11902.0], [55.3, 11903.0], [55.4, 11906.0], [55.5, 11906.0], [55.6, 11907.0], [55.7, 11908.0], [55.8, 11908.0], [55.9, 11915.0], [56.0, 11919.0], [56.1, 11923.0], [56.2, 11927.0], [56.3, 11929.0], [56.4, 11940.0], [56.5, 11942.0], [56.6, 11943.0], [56.7, 11945.0], [56.8, 11950.0], [56.9, 11951.0], [57.0, 11953.0], [57.1, 11955.0], [57.2, 11955.0], [57.3, 11959.0], [57.4, 11963.0], [57.5, 11966.0], [57.6, 11973.0], [57.7, 11973.0], [57.8, 11977.0], [57.9, 11978.0], [58.0, 11979.0], [58.1, 11981.0], [58.2, 11985.0], [58.3, 11988.0], [58.4, 11993.0], [58.5, 11995.0], [58.6, 12001.0], [58.7, 12007.0], [58.8, 12010.0], [58.9, 12013.0], [59.0, 12015.0], [59.1, 12016.0], [59.2, 12017.0], [59.3, 12018.0], [59.4, 12020.0], [59.5, 12021.0], [59.6, 12021.0], [59.7, 12023.0], [59.8, 12028.0], [59.9, 12030.0], [60.0, 12033.0], [60.1, 12033.0], [60.2, 12038.0], [60.3, 12039.0], [60.4, 12041.0], [60.5, 12042.0], [60.6, 12044.0], [60.7, 12046.0], [60.8, 12048.0], [60.9, 12049.0], [61.0, 12053.0], [61.1, 12053.0], [61.2, 12056.0], [61.3, 12062.0], [61.4, 12063.0], [61.5, 12064.0], [61.6, 12065.0], [61.7, 12067.0], [61.8, 12069.0], [61.9, 12069.0], [62.0, 12071.0], [62.1, 12074.0], [62.2, 12075.0], [62.3, 12077.0], [62.4, 12080.0], [62.5, 12080.0], [62.6, 12081.0], [62.7, 12085.0], [62.8, 12085.0], [62.9, 12086.0], [63.0, 12086.0], [63.1, 12088.0], [63.2, 12092.0], [63.3, 12094.0], [63.4, 12098.0], [63.5, 12099.0], [63.6, 12102.0], [63.7, 12104.0], [63.8, 12112.0], [63.9, 12116.0], [64.0, 12119.0], [64.1, 12119.0], [64.2, 12120.0], [64.3, 12123.0], [64.4, 12123.0], [64.5, 12124.0], [64.6, 12127.0], [64.7, 12129.0], [64.8, 12132.0], [64.9, 12134.0], [65.0, 12136.0], [65.1, 12138.0], [65.2, 12143.0], [65.3, 12144.0], [65.4, 12145.0], [65.5, 12146.0], [65.6, 12148.0], [65.7, 12149.0], [65.8, 12151.0], [65.9, 12152.0], [66.0, 12153.0], [66.1, 12153.0], [66.2, 12156.0], [66.3, 12156.0], [66.4, 12158.0], [66.5, 12160.0], [66.6, 12166.0], [66.7, 12167.0], [66.8, 12169.0], [66.9, 12169.0], [67.0, 12171.0], [67.1, 12172.0], [67.2, 12173.0], [67.3, 12173.0], [67.4, 12176.0], [67.5, 12177.0], [67.6, 12178.0], [67.7, 12179.0], [67.8, 12183.0], [67.9, 12186.0], [68.0, 12190.0], [68.1, 12193.0], [68.2, 12197.0], [68.3, 12199.0], [68.4, 12203.0], [68.5, 12208.0], [68.6, 12212.0], [68.7, 12214.0], [68.8, 12217.0], [68.9, 12219.0], [69.0, 12221.0], [69.1, 12223.0], [69.2, 12226.0], [69.3, 12230.0], [69.4, 12233.0], [69.5, 12235.0], [69.6, 12237.0], [69.7, 12239.0], [69.8, 12243.0], [69.9, 12246.0], [70.0, 12247.0], [70.1, 12248.0], [70.2, 12249.0], [70.3, 12251.0], [70.4, 12255.0], [70.5, 12256.0], [70.6, 12258.0], [70.7, 12259.0], [70.8, 12261.0], [70.9, 12263.0], [71.0, 12265.0], [71.1, 12266.0], [71.2, 12268.0], [71.3, 12271.0], [71.4, 12274.0], [71.5, 12277.0], [71.6, 12278.0], [71.7, 12278.0], [71.8, 12280.0], [71.9, 12281.0], [72.0, 12283.0], [72.1, 12285.0], [72.2, 12286.0], [72.3, 12287.0], [72.4, 12287.0], [72.5, 12291.0], [72.6, 12292.0], [72.7, 12293.0], [72.8, 12296.0], [72.9, 12298.0], [73.0, 12306.0], [73.1, 12308.0], [73.2, 12311.0], [73.3, 12312.0], [73.4, 12314.0], [73.5, 12317.0], [73.6, 12320.0], [73.7, 12323.0], [73.8, 12324.0], [73.9, 12325.0], [74.0, 12327.0], [74.1, 12328.0], [74.2, 12329.0], [74.3, 12330.0], [74.4, 12333.0], [74.5, 12338.0], [74.6, 12340.0], [74.7, 12346.0], [74.8, 12349.0], [74.9, 12350.0], [75.0, 12352.0], [75.1, 12353.0], [75.2, 12358.0], [75.3, 12358.0], [75.4, 12360.0], [75.5, 12361.0], [75.6, 12365.0], [75.7, 12367.0], [75.8, 12370.0], [75.9, 12371.0], [76.0, 12379.0], [76.1, 12382.0], [76.2, 12385.0], [76.3, 12386.0], [76.4, 12389.0], [76.5, 12390.0], [76.6, 12400.0], [76.7, 12401.0], [76.8, 12405.0], [76.9, 12408.0], [77.0, 12410.0], [77.1, 12415.0], [77.2, 12420.0], [77.3, 12421.0], [77.4, 12422.0], [77.5, 12425.0], [77.6, 12428.0], [77.7, 12429.0], [77.8, 12432.0], [77.9, 12435.0], [78.0, 12437.0], [78.1, 12440.0], [78.2, 12440.0], [78.3, 12443.0], [78.4, 12445.0], [78.5, 12447.0], [78.6, 12451.0], [78.7, 12453.0], [78.8, 12460.0], [78.9, 12463.0], [79.0, 12470.0], [79.1, 12481.0], [79.2, 12484.0], [79.3, 12492.0], [79.4, 12495.0], [79.5, 12496.0], [79.6, 12499.0], [79.7, 12507.0], [79.8, 12511.0], [79.9, 12515.0], [80.0, 12520.0], [80.1, 12527.0], [80.2, 12530.0], [80.3, 12530.0], [80.4, 12532.0], [80.5, 12533.0], [80.6, 12538.0], [80.7, 12539.0], [80.8, 12543.0], [80.9, 12544.0], [81.0, 12547.0], [81.1, 12548.0], [81.2, 12550.0], [81.3, 12550.0], [81.4, 12554.0], [81.5, 12558.0], [81.6, 12565.0], [81.7, 12567.0], [81.8, 12570.0], [81.9, 12576.0], [82.0, 12578.0], [82.1, 12580.0], [82.2, 12586.0], [82.3, 12588.0], [82.4, 12595.0], [82.5, 12600.0], [82.6, 12605.0], [82.7, 12606.0], [82.8, 12613.0], [82.9, 12613.0], [83.0, 12616.0], [83.1, 12619.0], [83.2, 12620.0], [83.3, 12623.0], [83.4, 12627.0], [83.5, 12631.0], [83.6, 12633.0], [83.7, 12638.0], [83.8, 12642.0], [83.9, 12645.0], [84.0, 12646.0], [84.1, 12649.0], [84.2, 12652.0], [84.3, 12653.0], [84.4, 12655.0], [84.5, 12659.0], [84.6, 12660.0], [84.7, 12663.0], [84.8, 12663.0], [84.9, 12666.0], [85.0, 12668.0], [85.1, 12669.0], [85.2, 12671.0], [85.3, 12677.0], [85.4, 12680.0], [85.5, 12681.0], [85.6, 12682.0], [85.7, 12684.0], [85.8, 12685.0], [85.9, 12688.0], [86.0, 12690.0], [86.1, 12696.0], [86.2, 12697.0], [86.3, 12699.0], [86.4, 12703.0], [86.5, 12715.0], [86.6, 12715.0], [86.7, 12718.0], [86.8, 12718.0], [86.9, 12721.0], [87.0, 12723.0], [87.1, 12724.0], [87.2, 12726.0], [87.3, 12727.0], [87.4, 12731.0], [87.5, 12735.0], [87.6, 12736.0], [87.7, 12737.0], [87.8, 12739.0], [87.9, 12743.0], [88.0, 12745.0], [88.1, 12750.0], [88.2, 12751.0], [88.3, 12754.0], [88.4, 12755.0], [88.5, 12757.0], [88.6, 12759.0], [88.7, 12761.0], [88.8, 12763.0], [88.9, 12766.0], [89.0, 12767.0], [89.1, 12767.0], [89.2, 12771.0], [89.3, 12773.0], [89.4, 12773.0], [89.5, 12775.0], [89.6, 12776.0], [89.7, 12780.0], [89.8, 12782.0], [89.9, 12784.0], [90.0, 12787.0], [90.1, 12792.0], [90.2, 12793.0], [90.3, 12796.0], [90.4, 12801.0], [90.5, 12808.0], [90.6, 12810.0], [90.7, 12814.0], [90.8, 12817.0], [90.9, 12824.0], [91.0, 12828.0], [91.1, 12833.0], [91.2, 12836.0], [91.3, 12840.0], [91.4, 12843.0], [91.5, 12845.0], [91.6, 12851.0], [91.7, 12854.0], [91.8, 12857.0], [91.9, 12870.0], [92.0, 12876.0], [92.1, 12882.0], [92.2, 12886.0], [92.3, 12888.0], [92.4, 12890.0], [92.5, 12895.0], [92.6, 12897.0], [92.7, 12899.0], [92.8, 12902.0], [92.9, 12905.0], [93.0, 12906.0], [93.1, 12909.0], [93.2, 12910.0], [93.3, 12914.0], [93.4, 12916.0], [93.5, 12926.0], [93.6, 12930.0], [93.7, 12935.0], [93.8, 12948.0], [93.9, 12952.0], [94.0, 12955.0], [94.1, 12962.0], [94.2, 12969.0], [94.3, 12981.0], [94.4, 12986.0], [94.5, 12998.0], [94.6, 13003.0], [94.7, 13013.0], [94.8, 13025.0], [94.9, 13029.0], [95.0, 13050.0], [95.1, 13057.0], [95.2, 13064.0], [95.3, 13075.0], [95.4, 13080.0], [95.5, 13087.0], [95.6, 13091.0], [95.7, 13102.0], [95.8, 13108.0], [95.9, 13130.0], [96.0, 13134.0], [96.1, 13148.0], [96.2, 13154.0], [96.3, 13162.0], [96.4, 13168.0], [96.5, 13177.0], [96.6, 13184.0], [96.7, 13201.0], [96.8, 13204.0], [96.9, 13209.0], [97.0, 13218.0], [97.1, 13224.0], [97.2, 13239.0], [97.3, 13247.0], [97.4, 13256.0], [97.5, 13259.0], [97.6, 13262.0], [97.7, 13265.0], [97.8, 13274.0], [97.9, 13284.0], [98.0, 13287.0], [98.1, 13300.0], [98.2, 13311.0], [98.3, 13314.0], [98.4, 13318.0], [98.5, 13321.0], [98.6, 13322.0], [98.7, 13328.0], [98.8, 13335.0], [98.9, 13343.0], [99.0, 13350.0], [99.1, 13365.0], [99.2, 13375.0], [99.3, 13393.0], [99.4, 13401.0], [99.5, 13430.0], [99.6, 13442.0], [99.7, 13480.0], [99.8, 13484.0], [99.9, 13504.0], [100.0, 13564.0]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1800.0, "maxY": 123.0, "series": [{"data": [[1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 8.0], [2200.0, 4.0], [2300.0, 11.0], [2400.0, 12.0], [2500.0, 8.0], [2600.0, 7.0], [2800.0, 15.0], [2700.0, 16.0], [2900.0, 22.0], [3000.0, 19.0], [3100.0, 22.0], [3200.0, 19.0], [3300.0, 15.0], [3400.0, 20.0], [3500.0, 15.0], [3600.0, 19.0], [3700.0, 16.0], [3800.0, 16.0], [3900.0, 19.0], [4000.0, 15.0], [4100.0, 15.0], [4200.0, 11.0], [4300.0, 17.0], [4400.0, 13.0], [4600.0, 19.0], [4500.0, 11.0], [4800.0, 19.0], [4700.0, 16.0], [4900.0, 14.0], [5000.0, 18.0], [5100.0, 13.0], [5200.0, 15.0], [5300.0, 12.0], [5400.0, 14.0], [5500.0, 7.0], [5600.0, 14.0], [5700.0, 24.0], [5800.0, 22.0], [6000.0, 13.0], [5900.0, 7.0], [6100.0, 9.0], [6200.0, 6.0], [6300.0, 5.0], [6400.0, 12.0], [6500.0, 23.0], [6600.0, 19.0], [6800.0, 15.0], [6900.0, 15.0], [6700.0, 18.0], [7000.0, 12.0], [7100.0, 17.0], [7200.0, 25.0], [7300.0, 27.0], [7400.0, 11.0], [7500.0, 10.0], [7600.0, 6.0], [7700.0, 6.0], [7800.0, 9.0], [7900.0, 15.0], [8000.0, 6.0], [8100.0, 4.0], [8500.0, 7.0], [8300.0, 4.0], [8600.0, 6.0], [8700.0, 11.0], [8200.0, 5.0], [8400.0, 8.0], [8800.0, 3.0], [8900.0, 38.0], [9000.0, 12.0], [9100.0, 13.0], [9200.0, 21.0], [9300.0, 11.0], [9400.0, 2.0], [9500.0, 12.0], [9600.0, 41.0], [9700.0, 32.0], [10200.0, 5.0], [9800.0, 23.0], [10000.0, 20.0], [9900.0, 17.0], [10100.0, 15.0], [10300.0, 10.0], [10400.0, 15.0], [10500.0, 12.0], [10600.0, 7.0], [10700.0, 3.0], [11000.0, 4.0], [11100.0, 3.0], [10900.0, 1.0], [10800.0, 3.0], [11200.0, 9.0], [11400.0, 10.0], [11700.0, 38.0], [11600.0, 24.0], [11500.0, 8.0], [11300.0, 9.0], [11900.0, 89.0], [12200.0, 115.0], [12100.0, 120.0], [11800.0, 49.0], [12000.0, 123.0], [12300.0, 92.0], [12400.0, 76.0], [12600.0, 96.0], [12700.0, 101.0], [12500.0, 71.0], [12800.0, 59.0], [12900.0, 46.0], [13000.0, 27.0], [13100.0, 26.0], [13200.0, 35.0], [13300.0, 32.0], [13400.0, 13.0], [13500.0, 3.0]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 67.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2433.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2433.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 67.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1252.9219999999991, "minX": 1.755591E12, "maxY": 1252.9219999999991, "series": [{"data": [[1.755591E12, 1252.9219999999991]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.755591E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1901.0, "minX": 1.0, "maxY": 13484.0, "series": [{"data": [[2.0, 13025.0], [3.0, 13435.0], [4.0, 12496.0], [7.0, 12561.0], [8.0, 12981.0], [11.0, 12926.0], [12.0, 12392.0], [14.0, 12603.0], [15.0, 12787.0], [19.0, 12684.5], [20.0, 12449.0], [22.0, 12779.6], [23.0, 12428.0], [25.0, 12480.0], [30.0, 12926.0], [39.0, 12049.0], [38.0, 12395.0], [41.0, 12769.5], [40.0, 12224.0], [42.0, 12460.0], [45.0, 12568.666666666666], [44.0, 12743.0], [46.0, 12534.5], [49.0, 12240.5], [50.0, 12907.333333333332], [52.0, 12461.0], [55.0, 12643.0], [57.0, 13030.0], [56.0, 12904.0], [59.0, 12173.333333333334], [61.0, 12166.0], [63.0, 12125.0], [62.0, 12824.0], [66.0, 12143.0], [65.0, 12337.5], [71.0, 12309.0], [69.0, 13239.0], [68.0, 12761.666666666666], [75.0, 12750.0], [74.0, 12277.0], [73.0, 12238.5], [79.0, 12683.5], [78.0, 12390.666666666666], [81.0, 12154.0], [80.0, 12160.0], [85.0, 13017.0], [84.0, 12908.5], [90.0, 13484.0], [88.0, 12425.0], [93.0, 13084.0], [92.0, 12463.5], [101.0, 12979.0], [100.0, 12400.0], [105.0, 12873.0], [111.0, 12474.0], [110.0, 12443.0], [109.0, 12576.0], [108.0, 12271.0], [113.0, 12286.0], [112.0, 12276.666666666666], [119.0, 12235.666666666666], [116.0, 13101.0], [123.0, 12558.0], [121.0, 12811.0], [120.0, 12906.0], [127.0, 12028.0], [126.0, 12927.5], [124.0, 12787.0], [135.0, 12821.666666666666], [134.0, 12672.0], [133.0, 12713.0], [141.0, 12258.0], [140.0, 12725.333333333334], [139.0, 12962.0], [136.0, 12138.0], [151.0, 12744.0], [149.0, 13023.666666666666], [148.0, 12816.0], [159.0, 12192.0], [158.0, 12468.666666666666], [156.0, 12890.0], [155.0, 12267.0], [154.0, 12757.0], [167.0, 12429.0], [165.0, 12736.0], [163.0, 12669.666666666666], [175.0, 12905.0], [174.0, 12267.0], [170.0, 12520.0], [169.0, 12605.75], [181.0, 12910.0], [180.0, 12417.0], [179.0, 12997.0], [178.0, 12892.0], [176.0, 12480.5], [191.0, 12611.4], [189.0, 12598.5], [188.0, 12379.0], [186.0, 12185.0], [199.0, 12740.5], [193.0, 12550.333333333334], [207.0, 12781.0], [205.0, 12796.0], [203.0, 12784.666666666666], [202.0, 12723.0], [213.0, 12763.0], [212.0, 12191.666666666666], [208.0, 13133.75], [223.0, 12818.2], [221.0, 12283.0], [219.0, 12756.0], [217.0, 12935.0], [218.0, 12281.0], [216.0, 12407.75], [230.0, 12857.0], [228.0, 12780.5], [227.0, 12389.0], [226.0, 12070.0], [224.0, 13375.0], [235.0, 12784.0], [234.0, 12251.0], [233.0, 12372.666666666666], [246.0, 12726.5], [244.0, 12699.0], [243.0, 12322.0], [241.0, 12067.0], [240.0, 12358.0], [254.0, 12608.0], [250.0, 12305.5], [248.0, 12742.333333333334], [269.0, 12090.0], [267.0, 12755.0], [265.0, 12243.0], [261.0, 12809.0], [258.0, 12695.5], [256.0, 12524.0], [275.0, 12217.5], [286.0, 12288.0], [285.0, 12800.5], [283.0, 12342.0], [282.0, 12195.0], [281.0, 12432.0], [279.0, 12440.0], [276.0, 12321.0], [274.0, 13204.0], [273.0, 12268.0], [301.0, 12709.5], [299.0, 12170.5], [297.0, 12064.0], [296.0, 12745.0], [295.0, 12085.0], [294.0, 12841.0], [292.0, 13214.0], [291.0, 12419.25], [289.0, 12909.0], [319.0, 12220.0], [315.0, 12851.0], [314.0, 12871.5], [313.0, 12364.333333333334], [311.0, 12690.0], [309.0, 12668.0], [306.0, 12893.75], [305.0, 12174.0], [323.0, 13257.0], [334.0, 12816.5], [333.0, 12969.0], [331.0, 12335.0], [330.0, 12851.666666666666], [327.0, 12541.0], [324.0, 12062.0], [322.0, 12071.0], [321.0, 12909.0], [351.0, 12184.0], [349.0, 12291.0], [347.0, 12135.0], [341.0, 12681.0], [340.0, 12177.0], [338.0, 12248.0], [337.0, 12124.5], [336.0, 12173.0], [365.0, 12677.0], [366.0, 12169.0], [364.0, 12508.0], [353.0, 12809.0], [352.0, 12808.0], [362.0, 12547.0], [361.0, 12638.0], [359.0, 13343.0], [358.0, 12043.0], [357.0, 12503.666666666666], [356.0, 12306.0], [383.0, 12864.0], [381.0, 12347.5], [380.0, 12284.5], [378.0, 12156.0], [376.0, 12301.5], [375.0, 12784.0], [399.0, 12365.5], [396.0, 12269.5], [393.0, 12543.5], [387.0, 12433.5], [384.0, 12859.0], [403.0, 13286.0], [409.0, 12717.0], [414.0, 12659.444444444445], [410.0, 12663.0], [407.0, 12845.0], [406.0, 12336.666666666666], [405.0, 12283.0], [404.0, 12158.5], [402.0, 13322.0], [400.0, 12553.0], [431.0, 12176.0], [430.0, 12793.0], [429.0, 11897.5], [428.0, 12022.0], [427.0, 12119.5], [446.0, 12763.0], [447.0, 13013.0], [445.0, 12694.5], [434.0, 12192.0], [433.0, 12178.0], [432.0, 12922.5], [443.0, 13206.0], [442.0, 12255.0], [440.0, 12654.0], [439.0, 12516.0], [438.0, 12358.5], [436.0, 12836.0], [463.0, 12129.0], [462.0, 12121.5], [461.0, 12591.333333333332], [457.0, 12879.5], [455.0, 12702.5], [454.0, 12054.0], [450.0, 12475.0], [448.0, 12461.0], [479.0, 12261.0], [475.0, 12997.0], [474.0, 12508.5], [472.0, 12809.25], [471.0, 12759.0], [464.0, 12585.0], [470.0, 12715.0], [468.0, 13096.0], [467.0, 12363.5], [466.0, 13120.0], [494.0, 12520.333333333334], [492.0, 12937.0], [491.0, 12870.0], [490.0, 12761.0], [489.0, 12758.0], [484.0, 12533.0], [483.0, 12653.0], [481.0, 12119.0], [480.0, 12353.0], [499.0, 12497.0], [506.0, 12659.0], [505.0, 12105.0], [504.0, 12676.0], [503.0, 13293.0], [502.0, 12294.0], [501.0, 12479.0], [497.0, 12751.0], [496.0, 12680.5], [536.0, 12089.0], [538.0, 13287.0], [526.0, 12486.0], [524.0, 12338.0], [520.0, 13108.0], [534.0, 12187.666666666666], [530.0, 13300.0], [570.0, 12226.0], [574.0, 13223.0], [560.0, 12735.0], [572.0, 12247.0], [568.0, 12698.0], [546.0, 12627.0], [544.0, 12156.0], [548.0, 13059.0], [554.0, 12351.0], [552.0, 12230.0], [566.0, 11861.0], [564.0, 11846.0], [562.0, 12216.0], [602.0, 12118.0], [604.0, 12876.0], [600.0, 12529.0], [590.0, 11923.0], [578.0, 12205.0], [582.0, 12720.0], [580.0, 12350.0], [586.0, 12222.666666666666], [584.0, 12048.5], [598.0, 12218.0], [596.0, 11959.0], [638.0, 12933.666666666666], [634.0, 12885.0], [630.0, 12153.6], [624.0, 12306.0], [610.0, 12167.0], [620.0, 12390.0], [616.0, 12561.0], [666.0, 12134.0], [668.0, 12687.5], [646.0, 12066.0], [662.0, 13127.0], [654.0, 12567.0], [652.0, 12114.0], [648.0, 12560.666666666666], [696.0, 12590.0], [702.0, 12664.666666666666], [700.0, 12665.0], [698.0, 12012.5], [684.0, 12172.0], [672.0, 12178.0], [674.0, 12085.0], [682.0, 13075.0], [680.0, 12697.0], [734.0, 12249.333333333334], [704.0, 12981.5], [714.0, 12692.0], [712.0, 13072.5], [710.0, 11871.0], [706.0, 11918.0], [742.0, 12205.0], [764.0, 12618.2], [754.0, 11961.0], [748.0, 12443.166666666668], [740.0, 12349.0], [736.0, 12358.0], [798.0, 12312.666666666666], [796.0, 12552.0], [792.0, 12231.947368421052], [776.0, 12240.0], [770.0, 12567.0], [830.0, 12199.0], [824.0, 12130.0], [808.0, 12526.5], [822.0, 12702.4], [856.0, 12120.0], [860.0, 12571.0], [836.0, 12499.0], [832.0, 12839.0], [852.0, 12605.0], [850.0, 12639.5], [848.0, 12559.5], [846.0, 12603.0], [840.0, 12692.75], [892.0, 12472.75], [868.0, 12447.5], [884.0, 12060.5], [882.0, 12640.0], [880.0, 12092.0], [876.0, 12584.0], [898.0, 12214.0], [914.0, 12168.0], [926.0, 12266.333333333334], [922.0, 12131.0], [896.0, 12486.75], [902.0, 12307.0], [910.0, 12432.0], [908.0, 11921.333333333334], [904.0, 12775.5], [916.0, 12595.0], [912.0, 12682.0], [954.0, 12430.0], [958.0, 12499.5], [952.0, 11683.0], [934.0, 12151.0], [932.0, 12243.5], [928.0, 12302.5], [938.0, 12464.0], [950.0, 12155.5], [946.0, 12031.0], [944.0, 12189.5], [986.0, 12528.0], [978.0, 11898.0], [984.0, 12766.0], [960.0, 12048.0], [972.0, 12916.0], [968.0, 12137.0], [980.0, 12077.0], [1018.0, 12354.0], [1022.0, 12440.0], [998.0, 12652.0], [1010.0, 12054.5], [1008.0, 12084.0], [1006.0, 11905.0], [1004.0, 11834.5], [1002.0, 11825.333333333334], [1072.0, 12350.0], [1080.0, 12443.5], [1064.0, 12038.0], [1084.0, 11920.5], [1076.0, 12948.0], [1052.0, 12690.5], [1024.0, 11860.0], [1028.0, 12518.0], [1032.0, 12556.5], [1036.0, 12290.0], [1040.0, 11991.0], [1068.0, 12057.0], [1140.0, 12359.0], [1148.0, 11908.0], [1120.0, 12828.0], [1144.0, 11928.5], [1136.0, 12237.0], [1096.0, 11600.0], [1088.0, 12445.0], [1112.0, 12530.333333333334], [1108.0, 12008.0], [1104.0, 11651.0], [1132.0, 12621.5], [1160.0, 11888.0], [1200.0, 12017.0], [1212.0, 12053.0], [1208.0, 11686.0], [1152.0, 12056.5], [1180.0, 11976.5], [1176.0, 11848.0], [1172.0, 12495.0], [1168.0, 11867.0], [1196.0, 11743.0], [1192.0, 11791.0], [1272.0, 11048.0], [1248.0, 11333.0], [1252.0, 12257.0], [1256.0, 11270.0], [1276.0, 10570.0], [1268.0, 11578.0], [1264.0, 11224.0], [1220.0, 11594.0], [1224.0, 11843.0], [1228.0, 11552.5], [1244.0, 11379.0], [1240.0, 11406.0], [1236.0, 11066.0], [1232.0, 11491.0], [1260.0, 10866.0], [1328.0, 9922.0], [1340.0, 9273.0], [1312.0, 10504.0], [1316.0, 9525.0], [1332.0, 9282.0], [1280.0, 10740.0], [1284.0, 10540.0], [1288.0, 10410.0], [1292.0, 10193.0], [1308.0, 10451.0], [1304.0, 9868.0], [1300.0, 9770.0], [1296.0, 9881.0], [1324.0, 9682.0], [1320.0, 9717.0], [1352.0, 9670.5], [1344.0, 9688.0], [1388.0, 10424.0], [1384.0, 9635.0], [1380.0, 10118.0], [1372.0, 9851.0], [1368.0, 9832.5], [1364.0, 9787.5], [1360.0, 9897.0], [1460.0, 9722.333333333334], [1468.0, 9657.0], [1440.0, 9896.0], [1464.0, 10162.5], [1416.0, 9947.0], [1408.0, 9809.0], [1436.0, 9353.5], [1432.0, 9923.0], [1428.0, 9618.5], [1424.0, 10142.0], [1448.0, 9118.0], [1520.0, 9726.0], [1532.0, 10385.0], [1504.0, 8948.0], [1524.0, 9615.25], [1480.0, 9811.0], [1476.0, 9790.0], [1500.0, 8956.0], [1496.0, 9411.5], [1488.0, 9294.5], [1516.0, 9281.0], [1508.0, 9948.5], [1588.0, 8907.0], [1596.0, 8838.0], [1580.0, 9384.0], [1572.0, 8595.0], [1576.0, 8999.0], [1592.0, 9169.5], [1584.0, 9224.5], [1540.0, 9374.75], [1536.0, 10272.0], [1544.0, 9615.0], [1548.0, 10035.0], [1564.0, 8989.0], [1560.0, 9037.0], [1556.0, 8919.5], [1552.0, 9263.0], [1656.0, 7385.0], [1652.0, 8558.0], [1660.0, 7796.0], [1632.0, 8121.0], [1636.0, 8164.0], [1640.0, 8542.0], [1644.0, 8535.0], [1648.0, 8341.0], [1600.0, 8782.0], [1604.0, 8115.0], [1608.0, 8935.0], [1612.0, 8348.0], [1628.0, 8334.0], [1624.0, 7893.0], [1620.0, 8321.0], [1616.0, 7993.0], [1720.0, 7526.0], [1724.0, 7335.0], [1696.0, 7917.0], [1700.0, 7894.0], [1704.0, 7668.5], [1708.0, 7556.0], [1716.0, 7409.0], [1712.0, 7211.0], [1664.0, 7667.0], [1672.0, 7464.0], [1676.0, 6530.0], [1692.0, 7929.0], [1684.0, 7475.0], [1780.0, 6800.0], [1788.0, 6702.0], [1760.0, 6848.0], [1768.0, 7349.0], [1772.0, 6129.0], [1776.0, 7483.0], [1740.0, 6613.0], [1732.0, 7579.0], [1728.0, 7864.0], [1756.0, 7280.0], [1752.0, 7565.0], [1748.0, 7557.0], [1744.0, 7463.0], [1844.0, 6597.0], [1840.0, 5860.0], [1824.0, 7130.0], [1828.0, 6688.0], [1832.0, 6503.0], [1852.0, 5867.0], [1804.0, 6657.0], [1796.0, 7005.5], [1792.0, 7225.0], [1820.0, 6577.0], [1816.0, 6756.0], [1812.0, 7374.0], [1908.0, 5751.0], [1916.0, 6155.0], [1896.0, 5786.0], [1900.0, 7200.0], [1904.0, 6531.0], [1856.0, 6942.0], [1864.0, 6323.5], [1868.0, 7207.0], [1884.0, 5949.0], [1976.0, 5020.0], [1972.0, 5220.0], [1980.0, 5245.0], [1952.0, 6585.0], [1956.0, 5546.0], [1960.0, 5706.333333333333], [1964.0, 5254.0], [1968.0, 5310.0], [1920.0, 6541.0], [1924.0, 6619.0], [1928.0, 5796.0], [1932.0, 5858.0], [1948.0, 5614.0], [1944.0, 5670.0], [1940.0, 6245.0], [1936.0, 5570.0], [2044.0, 5759.0], [2024.0, 5822.0], [2016.0, 5348.0], [2020.0, 4861.0], [2028.0, 4460.0], [1984.0, 4929.0], [1988.0, 5145.0], [1992.0, 5462.0], [1996.0, 5840.0], [2012.0, 5015.5], [2008.0, 5773.0], [2004.0, 5825.0], [2000.0, 5474.5], [2160.0, 3554.0], [2168.0, 4671.0], [2112.0, 4703.0], [2120.0, 5247.0], [2128.0, 5096.0], [2136.0, 4395.0], [2152.0, 4292.0], [2144.0, 4317.0], [2056.0, 4742.0], [2104.0, 5251.0], [2096.0, 4839.0], [2088.0, 4906.0], [2080.0, 4943.0], [2280.0, 3867.0], [2240.0, 4018.0], [2256.0, 3460.0], [2288.0, 3729.0], [2272.0, 3809.0], [2184.0, 4069.0], [2192.0, 4282.666666666667], [2200.0, 4082.0], [2232.0, 3650.0], [2224.0, 3739.0], [2216.0, 4232.0], [2208.0, 4364.0], [2424.0, 3085.0], [2368.0, 2980.0], [2376.0, 3040.0], [2392.0, 2974.0], [2400.0, 2904.0], [2304.0, 3332.0], [2312.0, 3964.0], [2360.0, 3360.5], [2344.0, 3581.0], [2432.0, 2524.0], [2448.0, 3121.0], [2488.0, 1901.0], [2456.0, 2438.0], [2440.0, 2445.0], [2480.0, 2335.0], [2472.0, 2286.0], [2464.0, 2340.0], [2161.0, 4744.0], [2113.0, 4579.0], [2121.0, 4614.0], [2129.0, 5211.0], [2137.0, 5080.0], [2153.0, 4804.0], [2145.0, 4423.0], [2073.0, 4692.0], [2065.0, 4737.0], [2057.0, 5161.0], [2049.0, 4904.5], [2105.0, 4897.0], [2097.0, 5035.0], [2089.0, 4188.0], [2081.0, 4659.0], [2281.0, 3775.0], [2297.0, 3502.6666666666665], [2289.0, 3759.0], [2241.0, 4010.0], [2249.0, 3644.0], [2265.0, 3426.0], [2273.0, 3457.0], [2177.0, 4136.0], [2193.0, 4153.0], [2201.0, 4683.0], [2233.0, 4118.0], [2209.0, 4431.0], [2409.0, 2785.0], [2369.0, 3112.0], [2385.0, 3091.5], [2393.0, 2996.0], [2425.0, 3322.0], [2401.0, 2753.0], [2313.0, 3745.0], [2321.0, 2746.0], [2329.0, 3222.6], [2361.0, 2618.0], [2345.0, 3595.0], [2433.0, 2532.0], [2449.0, 3088.0], [2457.0, 2405.0], [2441.0, 2448.0], [2489.0, 2748.0], [2481.0, 2643.0], [2473.0, 2727.0], [2465.0, 2913.0], [1081.0, 13087.0], [1061.0, 12865.0], [1085.0, 11673.0], [1057.0, 12312.0], [1077.0, 12175.0], [1073.0, 11907.0], [1029.0, 11633.0], [1025.0, 12351.0], [1053.0, 12359.0], [1045.0, 13028.5], [1041.0, 11914.0], [1141.0, 11949.0], [1137.0, 11977.0], [1149.0, 12982.0], [1121.0, 12934.0], [1125.0, 12410.0], [1145.0, 12389.0], [1089.0, 11670.0], [1093.0, 11831.0], [1097.0, 12038.0], [1101.0, 11970.0], [1117.0, 12425.0], [1113.0, 11950.0], [1109.0, 11665.0], [1133.0, 11955.0], [1129.0, 12371.0], [1209.0, 11321.0], [1185.0, 12051.0], [1189.0, 12321.0], [1193.0, 12017.0], [1213.0, 11269.0], [1205.0, 12335.5], [1201.0, 11338.0], [1165.0, 12007.0], [1181.0, 11841.0], [1177.0, 12250.0], [1169.0, 12180.0], [1273.0, 11480.0], [1249.0, 12225.0], [1253.0, 12254.0], [1257.0, 11297.0], [1277.0, 10558.0], [1269.0, 11181.0], [1265.0, 11209.0], [1217.0, 11928.0], [1221.0, 12422.0], [1229.0, 11834.0], [1245.0, 11761.0], [1241.0, 11454.0], [1237.0, 11480.0], [1233.0, 11502.0], [1261.0, 11344.0], [1329.0, 9699.0], [1337.0, 10356.0], [1317.0, 10100.0], [1313.0, 10099.0], [1333.0, 9698.0], [1281.0, 11655.0], [1285.0, 10491.0], [1289.0, 9967.0], [1293.0, 10441.0], [1309.0, 10121.0], [1301.0, 9845.0], [1297.0, 10551.0], [1325.0, 9704.0], [1401.0, 10607.0], [1405.0, 9761.0], [1381.0, 9217.0], [1377.0, 9610.5], [1385.0, 9631.0], [1397.0, 10150.0], [1393.0, 9919.5], [1357.0, 9660.0], [1353.0, 10342.0], [1349.0, 9685.0], [1345.0, 9961.5], [1373.0, 9648.0], [1369.0, 9860.0], [1365.0, 10596.0], [1361.0, 9657.0], [1461.0, 9401.5], [1469.0, 10128.0], [1441.0, 9760.0], [1465.0, 10307.0], [1457.0, 9211.5], [1417.0, 9864.0], [1413.0, 9482.5], [1409.0, 9955.0], [1437.0, 9803.0], [1425.0, 9145.0], [1449.0, 9761.0], [1445.0, 9614.5], [1525.0, 9716.0], [1533.0, 9638.0], [1509.0, 9237.0], [1529.0, 9970.5], [1477.0, 9726.0], [1473.0, 10236.333333333334], [1481.0, 8995.0], [1485.0, 9555.0], [1501.0, 8952.0], [1497.0, 8960.0], [1489.0, 8996.0], [1517.0, 10066.0], [1513.0, 9599.0], [1593.0, 8911.0], [1597.0, 9399.0], [1569.0, 8601.5], [1573.0, 8529.0], [1577.0, 8954.0], [1581.0, 8497.0], [1589.0, 9511.0], [1585.0, 9263.0], [1549.0, 9514.0], [1545.0, 8899.0], [1541.0, 8909.0], [1565.0, 9794.0], [1561.0, 9273.0], [1557.0, 8665.0], [1553.0, 10294.0], [1657.0, 7725.0], [1661.0, 7674.0], [1633.0, 7430.0], [1637.0, 8280.0], [1641.0, 7953.0], [1645.0, 7243.0], [1653.0, 7935.0], [1649.0, 7880.0], [1601.0, 8707.0], [1605.0, 8426.0], [1613.0, 9149.0], [1629.0, 8895.0], [1625.0, 8786.0], [1621.0, 8276.0], [1617.0, 8475.0], [1725.0, 7272.0], [1697.0, 7638.0], [1701.0, 7321.0], [1709.0, 7172.0], [1721.0, 7866.0], [1665.0, 7539.0], [1669.0, 7096.5], [1673.0, 7910.0], [1677.0, 7319.0], [1693.0, 6860.0], [1689.0, 7927.0], [1685.0, 8055.0], [1681.0, 6719.0], [1785.0, 6398.0], [1769.0, 6603.0], [1773.0, 6277.0], [1789.0, 6754.0], [1781.0, 6889.0], [1777.0, 6812.0], [1741.0, 7491.0], [1737.0, 7339.5], [1733.0, 7571.0], [1757.0, 6875.0], [1753.0, 6916.0], [1745.0, 7715.0], [1849.0, 6968.5], [1841.0, 5856.0], [1825.0, 6713.0], [1833.0, 6570.0], [1837.0, 6971.5], [1853.0, 6130.0], [1845.0, 6636.0], [1805.0, 6000.0], [1793.0, 7396.0], [1821.0, 6613.0], [1817.0, 7324.0], [1813.0, 5966.0], [1809.0, 6098.5], [1917.0, 5933.0], [1893.0, 6575.0], [1897.0, 6604.0], [1901.0, 6468.0], [1905.0, 6783.0], [1857.0, 7203.0], [1861.0, 6569.0], [1865.0, 5805.0], [1885.0, 6474.0], [1881.0, 6879.5], [1877.0, 6578.5], [1873.0, 6526.0], [1977.0, 5015.0], [1953.0, 5634.0], [1957.0, 5486.0], [1961.0, 5414.0], [1981.0, 5719.0], [1973.0, 5206.0], [1969.0, 5113.0], [1921.0, 6352.0], [1925.0, 5735.0], [1929.0, 5856.0], [1933.0, 5946.0], [1949.0, 6158.0], [1945.0, 5694.0], [1937.0, 6655.0], [2037.0, 4798.5], [2041.0, 5440.0], [2017.0, 4509.0], [2021.0, 5201.0], [2025.0, 5134.0], [2029.0, 5111.0], [1985.0, 5195.0], [1989.0, 5584.0], [1993.0, 5864.0], [1997.0, 5425.0], [2009.0, 4946.0], [2005.0, 4642.0], [2001.0, 5743.0], [2154.0, 4392.0], [2170.0, 4323.0], [2114.0, 4516.0], [2122.0, 4820.0], [2130.0, 4888.0], [2162.0, 4235.0], [2146.0, 5004.0], [2074.0, 4692.0], [2066.0, 5002.0], [2058.0, 4352.0], [2050.0, 4755.0], [2106.0, 4746.0], [2098.0, 4893.0], [2090.0, 4967.0], [2082.0, 4660.0], [2274.0, 3482.0], [2282.0, 3997.0], [2250.0, 3663.5], [2258.0, 3754.0], [2266.0, 3409.0], [2178.0, 4081.0], [2186.0, 4059.5], [2194.0, 4032.0], [2202.0, 3987.0], [2234.0, 4261.0], [2226.0, 3824.0], [2218.0, 3939.0], [2210.0, 3902.0], [2418.0, 2762.3333333333335], [2426.0, 2520.0], [2370.0, 3115.0], [2378.0, 3429.0], [2386.0, 3545.0], [2394.0, 2905.0], [2402.0, 3571.0], [2306.0, 3335.0], [2314.0, 3679.0], [2322.0, 3226.0], [2330.0, 3622.0], [2362.0, 3132.0], [2354.0, 3779.5], [2346.0, 3221.0], [2338.0, 3081.0], [2458.0, 2989.0], [2442.0, 3122.0], [2434.0, 2716.0], [2490.0, 2820.0], [2474.0, 2168.0], [2466.0, 2669.0], [2155.0, 4689.0], [2163.0, 4772.0], [2123.0, 4922.0], [2115.0, 4771.0], [2131.0, 3745.0], [2147.0, 4991.0], [2059.0, 4353.0], [2107.0, 4783.0], [2099.0, 4644.0], [2091.0, 5318.0], [2083.0, 4138.0], [2291.0, 3600.5], [2299.0, 2909.5], [2243.0, 3798.5], [2251.0, 4210.0], [2259.0, 4001.0], [2267.0, 2971.0], [2283.0, 3316.0], [2275.0, 3820.0], [2179.0, 3444.0], [2187.0, 3703.0], [2195.0, 4371.0], [2203.0, 3539.0], [2235.0, 3675.0], [2227.0, 4149.0], [2219.0, 4325.0], [2211.0, 4362.0], [2411.0, 3089.0], [2419.0, 3392.0], [2427.0, 3004.0], [2379.0, 3322.5], [2387.0, 3656.0], [2403.0, 3417.0], [2307.0, 3956.0], [2315.0, 3865.0], [2331.0, 3087.0], [2363.0, 3130.0], [2355.0, 3535.5], [2347.0, 3125.0], [2339.0, 3874.0], [2451.0, 2691.0], [2443.0, 2527.0], [2435.0, 2460.0], [2491.0, 2545.0], [2483.0, 2799.0], [2467.0, 2379.0], [543.0, 12085.0], [541.0, 12890.0], [529.0, 12177.666666666666], [539.0, 12233.0], [537.0, 12256.0], [527.0, 12136.0], [523.0, 12292.666666666666], [535.0, 12779.0], [533.0, 12837.666666666666], [575.0, 12460.666666666666], [561.0, 12437.0], [569.0, 12603.75], [557.0, 12873.75], [549.0, 12374.333333333334], [555.0, 12794.0], [553.0, 12727.0], [563.0, 12934.25], [605.0, 12454.5], [607.0, 12334.5], [601.0, 12239.0], [579.0, 12245.333333333334], [589.0, 12211.333333333334], [585.0, 12876.0], [599.0, 12260.0], [595.0, 12115.5], [609.0, 12170.5], [639.0, 11814.0], [635.0, 13365.0], [631.0, 12149.0], [625.0, 13289.0], [623.0, 12212.0], [615.0, 12385.333333333334], [613.0, 12099.0], [621.0, 12706.0], [619.0, 12385.0], [617.0, 12142.5], [665.0, 12928.0], [647.0, 12235.0], [661.0, 12471.833333333334], [659.0, 12287.0], [657.0, 12475.666666666666], [649.0, 12319.5], [697.0, 12272.0], [701.0, 12046.0], [675.0, 12680.0], [679.0, 12131.0], [677.0, 12672.0], [683.0, 12995.5], [695.0, 12066.0], [691.0, 12294.0], [689.0, 12222.833333333334], [709.0, 12127.0], [721.0, 12776.0], [715.0, 12208.0], [705.0, 12671.0], [763.0, 12228.333333333334], [759.0, 12515.0], [751.0, 12655.0], [797.0, 12150.0], [793.0, 12194.75], [791.0, 12400.2], [829.0, 12530.0], [831.0, 11731.0], [825.0, 11972.0], [805.0, 12308.0], [801.0, 13072.0], [815.0, 12251.333333333334], [809.0, 12369.562499999998], [821.0, 12530.0], [819.0, 12236.0], [817.0, 12299.5], [859.0, 12951.0], [839.0, 12496.0], [851.0, 12550.0], [847.0, 12457.0], [845.0, 12021.0], [843.0, 12567.5], [841.0, 12266.0], [871.0, 12268.4], [893.0, 12217.0], [869.0, 12651.857142857143], [865.0, 12385.0], [887.0, 12248.0], [877.0, 12491.0], [875.0, 12545.0], [873.0, 12588.0], [921.0, 12324.75], [923.0, 12403.0], [911.0, 12074.0], [899.0, 12443.0], [901.0, 13164.0], [909.0, 11780.0], [907.0, 12577.0], [917.0, 12938.0], [915.0, 12483.0], [913.0, 13130.0], [957.0, 12468.0], [953.0, 12116.0], [943.0, 12416.0], [941.0, 12444.333333333334], [937.0, 12186.0], [951.0, 11894.666666666666], [987.0, 12132.0], [979.0, 12208.0], [989.0, 12209.0], [991.0, 12855.0], [977.0, 11767.0], [967.0, 12250.0], [965.0, 12160.0], [963.0, 11942.6], [975.0, 12493.0], [971.0, 12228.0], [983.0, 12302.0], [981.0, 11761.0], [999.0, 12495.0], [1021.0, 12478.0], [997.0, 12401.0], [993.0, 12297.5], [1015.0, 12750.333333333334], [1011.0, 11744.0], [1007.0, 12270.0], [1082.0, 11567.0], [1086.0, 12018.0], [1058.0, 12298.0], [1066.0, 12594.5], [1078.0, 11951.0], [1074.0, 12049.0], [1030.0, 11725.0], [1034.0, 12062.5], [1038.0, 12420.5], [1050.0, 12083.333333333334], [1042.0, 11982.0], [1070.0, 12240.5], [1146.0, 12550.0], [1150.0, 12171.0], [1126.0, 12504.5], [1122.0, 11607.0], [1142.0, 11927.0], [1098.0, 11731.0], [1094.0, 11683.0], [1090.0, 11664.0], [1118.0, 12631.0], [1114.0, 12249.0], [1106.0, 12411.0], [1130.0, 12660.0], [1206.0, 12080.0], [1214.0, 11641.0], [1190.0, 12543.0], [1186.0, 12200.0], [1202.0, 11728.0], [1182.0, 12223.0], [1158.0, 12030.666666666666], [1154.0, 11811.5], [1166.0, 12285.0], [1178.0, 11838.0], [1174.0, 12223.5], [1170.0, 11879.0], [1198.0, 11697.0], [1194.0, 12327.0], [1274.0, 11981.0], [1278.0, 10896.0], [1250.0, 11226.0], [1254.0, 11703.0], [1258.0, 11531.0], [1270.0, 11178.0], [1266.0, 11490.0], [1246.0, 11345.0], [1222.0, 11955.0], [1226.0, 11881.5], [1230.0, 12468.0], [1242.0, 11374.0], [1238.0, 11437.0], [1234.0, 11094.0], [1262.0, 11257.0], [1334.0, 10714.0], [1342.0, 10060.0], [1314.0, 9964.0], [1318.0, 9317.0], [1330.0, 9701.0], [1310.0, 9746.0], [1282.0, 11744.0], [1286.0, 10460.0], [1290.0, 11141.0], [1294.0, 10175.0], [1306.0, 10140.0], [1302.0, 10522.0], [1298.0, 10148.0], [1326.0, 9701.0], [1322.0, 10068.0], [1394.0, 9617.0], [1382.0, 10580.0], [1406.0, 9173.0], [1402.0, 10606.0], [1358.0, 10023.0], [1354.0, 9261.0], [1386.0, 10643.0], [1374.0, 10672.0], [1370.0, 9650.0], [1366.0, 9653.0], [1362.0, 10043.0], [1462.0, 9940.0], [1470.0, 9799.0], [1442.0, 9741.0], [1466.0, 9831.0], [1458.0, 9387.5], [1414.0, 10618.0], [1410.0, 9591.0], [1438.0, 9452.0], [1434.0, 10073.666666666666], [1430.0, 9535.0], [1446.0, 9095.0], [1530.0, 10110.0], [1534.0, 9736.0], [1526.0, 9724.0], [1502.0, 8985.0], [1474.0, 9296.0], [1486.0, 9266.0], [1482.0, 9319.0], [1494.0, 9727.0], [1490.0, 8963.0], [1518.0, 9617.0], [1506.0, 9290.0], [1570.0, 9622.0], [1578.0, 8953.0], [1582.0, 8939.0], [1598.0, 8682.0], [1574.0, 9655.0], [1594.0, 9223.0], [1590.0, 9007.0], [1586.0, 8772.0], [1566.0, 8949.0], [1542.0, 9198.0], [1546.0, 9617.0], [1562.0, 9785.0], [1558.0, 9385.0], [1554.0, 9673.0], [1662.0, 6997.0], [1634.0, 8567.0], [1638.0, 8708.0], [1642.0, 8060.0], [1646.0, 8036.0], [1658.0, 8199.0], [1654.0, 7128.0], [1650.0, 7963.0], [1602.0, 8660.0], [1606.0, 7990.0], [1610.0, 8497.0], [1614.0, 9040.0], [1630.0, 8283.0], [1626.0, 8793.0], [1622.0, 8411.0], [1618.0, 8733.0], [1726.0, 7288.0], [1698.0, 7369.0], [1702.0, 7972.0], [1706.0, 7287.0], [1710.0, 7551.0], [1722.0, 7911.0], [1718.0, 7247.5], [1714.0, 7272.0], [1666.0, 8060.0], [1670.0, 7308.0], [1674.0, 7354.0], [1678.0, 7381.0], [1694.0, 7270.0], [1690.0, 6490.0], [1686.0, 7377.0], [1682.0, 7405.0], [1786.0, 6782.0], [1782.0, 6887.0], [1762.0, 6470.5], [1766.0, 6515.666666666667], [1774.0, 7251.0], [1790.0, 7491.0], [1778.0, 6020.0], [1738.0, 7433.0], [1734.0, 7783.0], [1730.0, 6827.0], [1758.0, 6190.0], [1754.0, 7670.0], [1750.0, 6798.0], [1842.0, 7089.0], [1854.0, 6996.0], [1826.0, 6815.0], [1850.0, 7279.0], [1806.0, 6701.0], [1802.0, 6856.0], [1798.0, 6426.5], [1794.0, 6714.0], [1822.0, 7004.0], [1818.0, 6746.0], [1814.0, 7348.0], [1810.0, 6674.0], [1914.0, 6617.0], [1910.0, 6771.5], [1894.0, 6450.0], [1890.0, 6988.666666666667], [1898.0, 6909.0], [1902.0, 6171.0], [1918.0, 6037.0], [1906.0, 5759.0], [1858.0, 6613.0], [1862.0, 7187.0], [1866.0, 6934.0], [1870.0, 6907.5], [1886.0, 6974.0], [1878.0, 7026.0], [1874.0, 7131.5], [1982.0, 5052.0], [1954.0, 5671.0], [1962.0, 6558.0], [1966.0, 5584.0], [1978.0, 5000.0], [1974.0, 5335.0], [1970.0, 5254.0], [1922.0, 7011.0], [1926.0, 6002.0], [1930.0, 6386.0], [1934.0, 7008.0], [1950.0, 5601.0], [1946.0, 5513.0], [1942.0, 5939.0], [1938.0, 5857.0], [2038.0, 5854.0], [2018.0, 5199.0], [2026.0, 5780.0], [2030.0, 5215.0], [2046.0, 5116.0], [2034.0, 4959.333333333333], [1986.0, 4858.0], [1990.0, 5938.0], [1994.0, 5857.0], [1998.0, 5867.0], [2014.0, 5109.0], [2010.0, 5705.0], [2006.0, 5776.0], [2002.0, 6083.0], [2164.0, 4327.0], [2156.0, 4252.0], [2116.0, 4506.0], [2124.0, 4692.0], [2132.0, 4382.0], [2172.0, 4667.5], [2148.0, 4392.0], [2076.0, 5460.0], [2068.0, 4360.0], [2060.0, 5705.0], [2052.0, 4863.5], [2108.0, 5152.0], [2100.0, 5447.0], [2092.0, 4176.0], [2084.0, 5433.0], [2284.0, 3361.0], [2276.0, 3482.0], [2292.0, 3337.0], [2300.0, 3196.0], [2244.0, 4064.0], [2260.0, 2767.0], [2268.0, 3347.0], [2180.0, 3420.0], [2196.0, 4010.0], [2204.0, 3969.0], [2236.0, 3580.0], [2228.0, 3812.0], [2220.0, 4282.0], [2212.0, 3159.0], [2420.0, 2657.0], [2380.0, 2896.0], [2372.0, 3478.5], [2388.0, 3670.0], [2396.0, 3077.5], [2428.0, 3292.0], [2404.0, 2877.0], [2308.0, 2771.0], [2324.0, 3557.0], [2332.0, 3249.0], [2364.0, 3512.0], [2356.0, 3049.0], [2348.0, 3086.0], [2492.0, 2140.0], [2500.0, 2230.8333333333335], [2452.0, 2451.0], [2444.0, 2377.0], [2484.0, 2209.0], [2468.0, 2878.0], [2165.0, 4481.0], [2117.0, 4621.0], [2125.0, 4431.0], [2133.0, 3992.0], [2173.0, 4685.0], [2157.0, 4465.0], [2149.0, 4929.0], [2077.0, 5429.0], [2069.0, 4355.0], [2061.0, 5703.0], [2053.0, 5008.0], [2109.0, 3984.0], [2101.0, 5285.0], [2093.0, 4954.0], [2085.0, 5665.0], [2301.0, 2781.0], [2253.0, 3643.0], [2245.0, 3169.0], [2261.0, 3877.0], [2269.0, 3860.0], [2285.0, 3264.0], [2277.0, 3844.0], [2181.0, 4211.0], [2197.0, 4549.0], [2237.0, 3962.0], [2229.0, 4199.0], [2221.0, 3983.0], [2413.0, 3200.0], [2389.0, 3488.0], [2397.0, 2153.0], [2421.0, 2721.0], [2405.0, 3099.0], [2309.0, 3231.0], [2317.0, 3310.0], [2333.0, 3856.0], [2365.0, 3072.0], [2357.0, 2608.0], [2349.0, 3052.0], [2341.0, 3532.6666666666665], [2437.0, 2719.0], [2461.0, 2936.0], [2453.0, 2823.0], [2445.0, 2409.0], [2493.0, 2411.0], [2485.0, 2170.0], [2477.0, 2949.0], [2469.0, 2858.0], [1087.0, 12446.0], [1059.0, 12329.0], [1027.0, 12869.0], [1055.0, 12205.0], [1047.0, 12312.5], [1043.0, 12005.0], [1071.0, 11695.0], [1067.0, 12314.0], [1063.0, 12159.5], [1147.0, 11915.0], [1123.0, 12242.0], [1139.0, 12140.5], [1119.0, 11844.0], [1095.0, 11953.0], [1099.0, 12421.0], [1103.0, 12039.5], [1115.0, 11990.0], [1107.0, 11665.0], [1135.0, 12370.5], [1127.0, 11995.0], [1211.0, 12140.0], [1215.0, 11632.0], [1187.0, 11791.0], [1191.0, 12069.0], [1207.0, 11680.0], [1203.0, 11963.0], [1183.0, 12596.0], [1155.0, 12367.0], [1163.0, 12255.0], [1159.0, 11892.0], [1167.0, 11866.0], [1175.0, 11471.0], [1171.0, 11860.0], [1199.0, 12017.0], [1195.0, 11660.0], [1275.0, 11247.0], [1279.0, 10774.0], [1251.0, 12386.0], [1255.0, 11311.0], [1259.0, 11725.0], [1271.0, 11795.0], [1267.0, 11470.0], [1247.0, 11339.0], [1219.0, 11548.0], [1223.0, 11978.0], [1231.0, 11907.0], [1243.0, 12158.0], [1239.0, 11902.0], [1235.0, 11760.0], [1263.0, 10848.0], [1291.0, 11063.0], [1339.0, 10016.333333333334], [1335.0, 10070.0], [1331.0, 10301.0], [1311.0, 9331.0], [1283.0, 10978.0], [1287.0, 11472.0], [1295.0, 10293.0], [1307.0, 9339.0], [1303.0, 9753.0], [1299.0, 10151.0], [1327.0, 9704.0], [1323.0, 10077.0], [1319.0, 9704.0], [1395.0, 9675.0], [1407.0, 9657.0], [1383.0, 9209.0], [1399.0, 9568.0], [1355.0, 10041.0], [1351.0, 9645.5], [1347.0, 9476.5], [1375.0, 9645.0], [1371.0, 10368.0], [1391.0, 9788.0], [1387.0, 10493.0], [1467.0, 9016.0], [1443.0, 9797.0], [1423.0, 10151.0], [1415.0, 10060.0], [1411.0, 9591.0], [1439.0, 9112.0], [1427.0, 9143.0], [1447.0, 9734.0], [1531.0, 10225.0], [1535.0, 9567.0], [1527.0, 9289.0], [1503.0, 8951.0], [1479.0, 9320.5], [1483.0, 10128.0], [1499.0, 9518.0], [1491.0, 9676.0], [1519.0, 9726.0], [1515.0, 8942.0], [1587.0, 8949.0], [1599.0, 8762.0], [1571.0, 8925.0], [1575.0, 9002.0], [1579.0, 9512.0], [1595.0, 9419.0], [1551.0, 9395.5], [1547.0, 9638.0], [1543.0, 9854.0], [1567.0, 8620.0], [1563.0, 9535.0], [1559.0, 9753.0], [1659.0, 7843.0], [1663.0, 7771.0], [1635.0, 8694.0], [1639.0, 8051.0], [1643.0, 7250.0], [1647.0, 8639.0], [1655.0, 8052.0], [1651.0, 7156.0], [1631.0, 8465.0], [1603.0, 9293.0], [1607.0, 8435.0], [1615.0, 8490.0], [1627.0, 8256.0], [1623.0, 8444.0], [1619.0, 8958.0], [1719.0, 7404.0], [1715.0, 7841.0], [1727.0, 7261.0], [1699.0, 7306.0], [1711.0, 7886.0], [1723.0, 7171.0], [1695.0, 7245.0], [1667.0, 7972.0], [1671.0, 6527.0], [1675.0, 7372.0], [1679.0, 7396.0], [1691.0, 6485.0], [1687.0, 6955.0], [1683.0, 7374.0], [1787.0, 5992.0], [1779.0, 6397.0], [1791.0, 7223.0], [1763.0, 6086.0], [1767.0, 7598.0], [1771.0, 6584.0], [1775.0, 7139.0], [1783.0, 6875.0], [1743.0, 7153.5], [1739.0, 6630.0], [1735.0, 7507.0], [1731.0, 7612.0], [1759.0, 6970.0], [1755.0, 7232.0], [1751.0, 6655.0], [1747.0, 6372.0], [1843.0, 7022.0], [1847.0, 7100.5], [1851.0, 6964.0], [1827.0, 6988.0], [1831.0, 6562.0], [1839.0, 6209.0], [1807.0, 6626.0], [1803.0, 7034.0], [1823.0, 7043.0], [1819.0, 6975.0], [1815.0, 7346.0], [1811.0, 6771.0], [1911.0, 6916.0], [1919.0, 7177.0], [1891.0, 6609.0], [1895.0, 5789.0], [1915.0, 5791.0], [1887.0, 5786.0], [1867.0, 6950.0], [1883.0, 5803.0], [1879.0, 6505.0], [1875.0, 6488.0], [1979.0, 4949.0], [1983.0, 5202.0], [1955.0, 5355.0], [1963.0, 5271.0], [1967.0, 5155.0], [1975.0, 5075.0], [1971.0, 6473.0], [1951.0, 5638.0], [1923.0, 6009.0], [1927.0, 5897.0], [1931.0, 6283.0], [1935.0, 6254.0], [1947.0, 5708.0], [1943.0, 6834.0], [1939.0, 5660.0], [2047.0, 4845.0], [2043.0, 5340.5], [2019.0, 5837.0], [2023.0, 5664.0], [2027.0, 4463.0], [2031.0, 4807.0], [2039.0, 5476.0], [2035.0, 5787.0], [2015.0, 5368.0], [1987.0, 4879.0], [1991.0, 5718.0], [1995.0, 6063.0], [2007.0, 5377.0], [2003.0, 5371.0], [2166.0, 4535.0], [2118.0, 3826.0], [2126.0, 4561.0], [2134.0, 3994.0], [2078.0, 5356.0], [2070.0, 5113.0], [2062.0, 5473.0], [2054.0, 5152.0], [2110.0, 3927.0], [2102.0, 5410.0], [2094.0, 4951.0], [2086.0, 4604.0], [2294.0, 3575.0], [2278.0, 3950.0], [2246.0, 4055.0], [2254.0, 3471.0], [2270.0, 3528.0], [2302.0, 3257.0], [2190.0, 4321.0], [2198.0, 4005.0], [2206.0, 4529.0], [2238.0, 2932.0], [2230.0, 3660.0], [2222.0, 3774.0], [2214.0, 3155.0], [2422.0, 3270.0], [2374.0, 2978.0], [2382.0, 3291.5], [2390.0, 2874.0], [2430.0, 2619.5], [2414.0, 2805.0], [2366.0, 2959.0], [2318.0, 3360.0], [2358.0, 3215.0], [2350.0, 2919.0], [2342.0, 3602.0], [2454.0, 2370.0], [2446.0, 2373.0], [2462.0, 2366.0], [2438.0, 3246.0], [2494.0, 2124.0], [2486.0, 2759.0], [2470.0, 2351.0], [2175.0, 4665.5], [2159.0, 4479.0], [2119.0, 5264.0], [2127.0, 4954.0], [2135.0, 5073.0], [2143.0, 4320.5], [2167.0, 4667.0], [2151.0, 4409.0], [2079.0, 4661.0], [2071.0, 5004.0], [2063.0, 4998.0], [2055.0, 5153.0], [2111.0, 4630.0], [2103.0, 5447.0], [2095.0, 5044.0], [2087.0, 5595.0], [2287.0, 3539.5], [2303.0, 3321.0], [2247.0, 4237.0], [2255.0, 4148.0], [2263.0, 3941.0], [2271.0, 3862.0], [2279.0, 3768.0], [2239.0, 4358.0], [2183.0, 4092.5], [2207.0, 3148.0], [2231.0, 4187.0], [2215.0, 4176.0], [2431.0, 2976.0], [2423.0, 2705.0], [2375.0, 3613.0], [2383.0, 3087.0], [2391.0, 2872.0], [2399.0, 3151.5], [2415.0, 2920.0], [2311.0, 3547.5], [2319.0, 3800.0], [2335.0, 3366.5], [2351.0, 3247.0], [2343.0, 3115.0], [2455.0, 2605.0], [2447.0, 2473.0], [2463.0, 2933.0], [2439.0, 2506.0], [2487.0, 2184.0], [2479.0, 2303.0], [2471.0, 2354.0], [1.0, 12251.0]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}, {"data": [[1252.9207999999994, 9454.709200000008]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18490.8, "minX": 1.755591E12, "maxY": 161221.98333333334, "series": [{"data": [[1.755591E12, 161221.98333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.755591E12, 18490.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.755591E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9454.709200000008, "minX": 1.755591E12, "maxY": 9454.709200000008, "series": [{"data": [[1.755591E12, 9454.709200000008]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.755591E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9314.789600000027, "minX": 1.755591E12, "maxY": 9314.789600000027, "series": [{"data": [[1.755591E12, 9314.789600000027]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.755591E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6108.358800000014, "minX": 1.755591E12, "maxY": 6108.358800000014, "series": [{"data": [[1.755591E12, 6108.358800000014]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.755591E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1839.0, "minX": 1.755591E12, "maxY": 13564.0, "series": [{"data": [[1.755591E12, 13564.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.755591E12, 12796.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.755591E12, 13357.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.755591E12, 13060.499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.755591E12, 1839.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.755591E12, 11680.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.755591E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2196.5, "minX": 18.0, "maxY": 12385.5, "series": [{"data": [[263.0, 9727.0], [71.0, 8895.0], [150.0, 4801.5], [18.0, 10515.5], [1172.0, 12385.5], [19.0, 2196.5], [152.0, 2959.0], [156.0, 3701.5], [78.0, 5361.5], [96.0, 7464.0], [106.0, 11726.5], [219.0, 6630.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[150.0, 5014.5], [19.0, 2411.0], [152.0, 3429.0], [156.0, 4014.0], [78.0, 5806.5], [96.0, 7841.0], [219.0, 7129.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1172.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 18.0, "maxY": 12385.5, "series": [{"data": [[263.0, 9727.0], [71.0, 8895.0], [150.0, 4801.0], [18.0, 10515.5], [1172.0, 12385.5], [19.0, 2196.5], [152.0, 2959.0], [156.0, 3701.5], [78.0, 5361.5], [96.0, 7464.0], [106.0, 11726.5], [219.0, 6630.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[150.0, 0.0], [19.0, 0.0], [152.0, 0.0], [156.0, 0.0], [78.0, 0.0], [96.0, 0.0], [219.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1172.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.755591E12, "maxY": 41.666666666666664, "series": [{"data": [[1.755591E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.755591E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.755591E12, "maxY": 40.55, "series": [{"data": [[1.755591E12, 1.1166666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.755591E12, 40.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.755591E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.755591E12, "maxY": 40.55, "series": [{"data": [[1.755591E12, 40.55]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ-success", "isController": false}, {"data": [[1.755591E12, 1.1166666666666667]], "isOverall": false, "label": "ดึงข้อมูลการนัดหมายอบรมในหน่วยบริการ-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.755591E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.755591E12, "maxY": 40.55, "series": [{"data": [[1.755591E12, 40.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.755591E12, 1.1166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.755591E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

